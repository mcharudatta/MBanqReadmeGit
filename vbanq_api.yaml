openapi: 3.1.0
info:
  title: Mbanq Cloud
  description: >-
    This collection encapsulates a subset of Mbanq Cloud API's around Client On-boarding, Account opening, Card Issuing and Transfers


    The below environment variables are used in this collection:


    - **access_token**: This access token is returned from the Authorization API

    - **user_name**: Hardcoded to "admin"

    - **password**: The password used while creating a demo instance

    - **tenant_id**: tenant_id of the demo instance.

    - **api_domain**: Refers to [https://api.cloud.mbanq.com](https://api.cloud.mbanq.com)
  contact: {}
  version: '1.0'
jsonSchemaDialect: https://json-schema.org/draft/2020-12/schema
servers:
- url: https://api.cloud.mbanq.com/oauth
  variables: {}
  description: >-
    URL for getting the Access Token
- url: https://api.cloud.mbanq.com/v1
  variables: {}
  description: >-
    URL for getting the APIs
- url: https://api.cloud.mbanq.com/graphql
  variables: {}
paths:
  /token:
    post:
      tags:
      - Authorization
      summary: Request Access Token
      description: >-
        
        You can use this API to obtain the access token for authentication.To authenticate requests, the APIs use OAuth 2.0 access tokens. 


        The first step to using the APIs is to obtain this access token.
        If the request is valid, the response will include the access token, a refresh token, and additional properties about the authorization.


        The response includes a parameter "expires_in" indicating the token expiry duration, after which the token needs to be refreshed.
      operationId: RequestAccessToken
      parameters:
      - name: content-type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/x-www-form-urlencoded
          type: string
          examples:
          - application/x-www-form-urlencoded
      - name: tenantid
        in: header
        description: "The ID of your banking instance visible in the MBANQ Console. You need to pass this value as one of the following: \n(1) The 'tenantIdentifier' query parameter. \n(2) The 'tenantId' header parameter."
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              required:
              - username
              - password
              - grant_type
              - client_id
              - client_secret
              type: object
              properties:
                username:
                  type: string
                  examples:
                  - '{{user_name}}'
                  description: 'The user name defined for your banking instance.'
                password:
                  type: string
                  examples:
                  - ''
                  description: 'The Password defined for your banking instance.'
                grant_type:
                  type: string
                  description: "The grant type defined for your banking instance.Supported values:\n 'password' ,'refresh_token'."
                  examples:
                  - password
                client_id:
                  type: string
                  examples:
                  - api
                  description: 'The identifier for the registered application of your banking instance.\n For this preview release, the default value is: api. In our official release, you will be able to set this uniquely for each application.'
                client_secret:
                  type: string
                  examples:
                  - secret
                  description: 'The client_secret is a secret known only to the application and the authorization server.\n For this preview release, the default value is secret. In our official release, you will be able to set this uniquely for each application.'
              contentMediaType: application/x-www-form-urlencoded
        required: false
      responses:
          '200':
            description: 'Token is obtained successfully.'
            content:
              application/json:
                examples:
                  Result:
                    value: {
                      "scope": "all",
                      "access_token": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImlzQWNjZXNzVG9rZW4iOnRydWUsImV4cCI6MTY4ODM2NzIzMSwidXNlcklkIjoxLCJpYXQiOjE2ODgzNjM2MzF9.w5MshXIEBybS2PKXUEVbLtQWtebO8tKJnZaykZs8Vda7De2viQFyhuYPjEova_aq1PFe9lVS85epFnmJYYx0WA",
                      "token_type": "bearer",
                      "refresh_token": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImlzQWNjZXNzVG9rZW4iOmZhbHNlLCJleHAiOjE2ODg0NTAwMzEsInVzZXJJZCI6MSwiaWF0IjoxNjg4MzYzNjMxfQ.ZXUaDhpNMhuaUUZtwMYLy4sWNFy476nYZ38lCDI7jKrYlxHTsz6vL2hxBKWlIZFGBdGnBCswcQ0uRtjWzHf0yw",
                      "expires_in": 1084,
                      "required_password_reset": false,
                      "required_terms_and_conditions_check": false
                      }
            headers: {}
          '400':
            description: "The request fails if the tenant Id is missing or incorrect."
            content:
              application/json:
                examples:
                  Result:
                    value: {
                          "timestamp": "2023-07-03T06:41:54.148+00:00",
                          "status": 400,
                          "error": "Bad Request",
                          "path": "/oauth/token"
                          }    
            headers: {}
      deprecated: false
      servers:
      - url: https://api.cloud.mbanq.com/oauth
        variables: {}
      security: []  
    parameters: []

  /clients:
    post:
      tags:
      - Onboarding
      summary: Create & Activate Client
      description: "Use this API to create and activate a client. Clients are individuals and businesses who have applied (or may apply) for loans with an MFI. You can create the client in 'Pending' or 'Active' state.\n\n The Client id is returned. This client id will be used to retrieve/update any information about the client. It will also help in creating an account.\n\n**Note:**\n\n1. You can enter either:\n `firstname`, `middlename` `lastname` - for a person (`middlename` is optional) OR `fullname` - for a business or organisation (or person known by one name).\n2. If address is enabled (enable-address=true):\n You need to pass an additional field - `address`.\n3. Valid legal Form Id:\n 1 = PERSON\n 2 = ENTITY\n    \n\n**Mandatory fields**\n\n- `firstname` and `lastname` or `fullname`\n- `officeId`\n- if `active=true` then `activationDate` needs to be passed \n- If address is enabled (enable-address=true):\n You need to pass an additional field - `address`\n    \n\n---\n\n**Optional fields**\n\n- `groupId`, `externalId`, `accountNo`, `staffId`, `mobileNo`, `savingsProductId`, `genderId`, `clientTypeId`, `clientClassificationId`, `legalFormId`\n    \n\n---\n\n"
      operationId: Create&ActivateClient
      parameters:
      - name: tenantid
        in: header
        description: "The ID of your banking instance visible in the MBANQ Console. You need to pass this value as one of the following: \n(1) The 'tenantIdentifier' query parameter. \n(2) The 'tenantId' header parameter."
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateActivateClientRequest'
              - examples:
                - activationDate: 13 June 2023
                  active: false
                  dateFormat: dd MMMM yyyy
                  familyMembers: []
                  firstname: Test
                  genderId: 634
                  lastname: Instance
                  locale: en
                  officeId: 1
                  savingsProductId: null
                  submittedOnDate: 13 June 2023
                  mobileNo: '12345678998'
                  emailAddress: abc@testgmail.com
              contentMediaType: application/json
            example:
              activationDate: 13 June 2023
              active: false
              dateFormat: dd MMMM yyyy
              familyMembers: []
              firstname: Test
              genderId: 634
              lastname: Instance
              locale: en
              officeId: 1
              savingsProductId: null
              submittedOnDate: 13 June 2023
              mobileNo: '12345678998'
              emailAddress: abc@testgmail.com
        required: true
      responses:
          '200':
            description: 'The Client is created/activated successfully.'
            content:
              application/json:
                examples:
                  Result:
                    value: 
                      {
                        "officeId": 1,
                        "clientId": 20,
                        "resourceId": 20
                      }                
            headers: {}
          '400':
            description: "The request fails if the name details are missing."
            content:
              application/json:
                examples:
                  Result:
                    value: {
                      "developerMessage": "The request was invalid. This typically will happen due to validation errors which are provided.",
                      "httpStatusCode": "400",
                      "defaultUserMessage": "Validation errors exist.",
                      "userMessageGlobalisationCode": "validation.msg.validation.errors.exist",
                      "errors": [
                        {
                          "developerMessage": "Failed data validation due to: .no.name.details.passed.",
                          "defaultUserMessage": "Failed data validation due to: .no.name.details.passed.",
                          "userMessageGlobalisationCode": "validation.msg.client.id..no.name.details.passed",
                          "parameterName": "id",
                          "value": null,
                          "args": [
                            {
                              "value": null
                            },
                            {
                              "value": []
                            }
                          ]
                        }
                      ]
                    } 
            headers: {}
       
      deprecated: false
      servers:
      - url: https://api.cloud.mbanq.com/v1
        variables: {}
    get:
      tags:
      - Onboarding
      summary: List Clients
      description: >-
        Use this API to retrieve the list of clients.        
        The list supports **pagination** and **sorting**.

        Example Requests:


        - `/clients`

        - `/clients?fields=displayName,officeName,timeline`

        - `/clients?offset=10&limit=50`

        - `/clients?orderBy=firstname&sortOrder=DESC`
      operationId: ListClients
      parameters:
      - name: content-type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      - name: tenantid
        in: header
        description: "The ID of your banking instance visible in the MBANQ Console. You need to pass this value as one of the following: \n(1) The 'tenantIdentifier' query parameter. \n(2) The 'tenantId' header parameter."
        required: true
        style: simple
        schema:
          type: string
      - name: offset
        in: query
        description: >-
           Indicates the result from which pagination starts. Defaults to 0.
        schema:
          type: integer          
      - name: limit
        in: query
        description: "Restricts the size of the results returned. Defaults to 200. \nTo override the default and return all entries you must explicitly pass a non-positive integer value for limit e.g. `limit=0`, or `limit=-1`"
        schema:
          type: integer
      - name: orderBy
        in: query
        description: "The list is sorted by the indicated field.\n Possible values - displayName, accountNo, officeId, officeName."
        schema:
          type: string
      - name: sortBy
        in: query
        description: >-
          Specifies the sorting order. 
          Possible values - ASC, DESC
        schema:
           type: string
      - name: officeId
        in: query
        description: Provides the ability to restrict the list of clients returned based on the office they are associated with.
        schema:
          type: integer
      - name: underHierarchy
        in: query
        description: Use this field to return all clients under a given hierarchy.
        schema:
          type: string
      - name: displayName
        in: query
        description: Use this field to restrict the results based on display name.
        schema:
          type: string
      - name: firstName
        in: query
        description: Use this field to restrict the results based on first name.
        schema:
          type: string
      - name: lastName
        in: query
        description: Use this field to restrict the results based on last name.
        schema:
           type: string
      - name: externalId
        in: query
        description: Use this field to restrict the results based on externa Id.
        schema:
           type: string
      - name: sqlSearch
        in: query
        description: "Use an SQL fragment valid for the underlying client schema to filter results.\nE.g. display_name like %K%"
        schema:
          type: string
      - name: orphansOnly
        in: query
        description: "Use orphansOnly as 'true' to list clients that are not associated with any parent."
        schema:
          type: boolean
      - name: clientStatus
        in: query
        description: "Use this field to restrict the results based on client status.\n Possible values - INVALID, PENDING, ACTIVE, etc."
        schema:
            type: string
      - name: mobileNo
        in: query
        description: Use this field to restrict results based on the mobile number.
        schema:
          type: string
      - name: createdStartDate
        in: query
        description: Use this field to restrict results based on the creation start date.
        schema:
           type: string
      - name: creationEndDate
        in: query
        description: Use this field to restrict results based on the creation end date.
        schema:
          type: string
      - name: activatedStartDate
        in: query
        description: Use this field to restrict results based on the activated start date.
        schema:
            type: string
      - name: activatedEndDate
        in: query
        description: Use this field to restrict results based on the activated end date.
        schema:
           type: string
      - name: closedStartDate
        in: query
        description: Use this field to restrict results based on the closing start date.
        schema:
           type: string
      - name: closedEndDate
        in: query
        description: Use this field to restrict results based on the closing end date.
        schema:
           type: string
      - name: checkIdentitiesExpiration
        in: query
        description: "Use this field to restrict the results based on the expiration.\n Defaults to false."
        schema:
           type: boolean
      responses:
            '200':
              description: 'The list of clients is retrieved successfully.'
              content:
                application/json:
                  examples:
                    Result:
                      value: 
                        {
                          "totalFilteredRecords": 12,
                          "pageItems": [
                            {
                              "id": 21,
                              "accountNo": "000000021",
                              "status": {
                                "id": 300,
                                "code": "clientStatusType.active",
                                "value": "Active"
                              },
                              "subStatus": {
                                "active": false,
                                "mandatory": false,
                                "systemDefined": false
                              },
                              "active": true,
                              "activationDate": [
                                2023,
                                7,
                                3
                              ],
                              "firstname": "DemoRJ",
                              "lastname": "DemoRJ",
                              "displayName": "DemoRJ DemoRJ",
                              "gender": {
                                "active": false,
                                "mandatory": false,
                                "systemDefined": false
                              },
                              "clientType": {
                                "active": false,
                                "mandatory": false,
                                "systemDefined": false
                              },
                              "clientClassification": {
                                "id": 651,
                                "active": false,
                                "mandatory": false,
                                "systemDefined": false
                              },
                              "isStaff": false,
                              "skipAvs": false,
                              "officeId": 1,
                              "timeline": {
                                "submittedOnDate": [
                                  2023,
                                  7,
                                  3
                                ],
                                "activatedOnDate": [
                                  2023,
                                  7,
                                  3
                                ]
                              },
                              "clientNonPersonDetails": {
                                "constitution": {
                                  "active": false,
                                  "mandatory": false,
                                  "systemDefined": false
                                },
                                "mainBusinessLine": {
                                  "active": false,
                                  "mandatory": false,
                                  "systemDefined": false
                                }
                              },
                              "clientTransferOptionData": {
                                "externalCardDebitAllowed": false,
                                "externalCardCreditAllowed": false
                              }
                            },
                            {
                              "id": 20,
                              "accountNo": "000000020",
                              "status": {
                                "id": 300,
                                "code": "clientStatusType.active",
                                "value": "Active"
                              },
                              "subStatus": {
                                "active": false,
                                "mandatory": false,
                                "systemDefined": false
                              },
                              "active": true,
                              "activationDate": [
                                2023,
                                7,
                                3
                              ],
                              "firstname": "DemoRJ",
                              "lastname": "DemoRJ",
                              "displayName": "DemoRJ DemoRJ",
                              "gender": {
                                "active": false,
                                "mandatory": false,
                                "systemDefined": false
                              },
                              "clientType": {
                                "active": false,
                                "mandatory": false,
                                "systemDefined": false
                              },
                              "clientClassification": {
                                "id": 651,
                                "active": false,
                                "mandatory": false,
                                "systemDefined": false
                              },
                              "isStaff": false,
                              "skipAvs": false,
                              "officeId": 1,
                              "timeline": {
                                "submittedOnDate": [
                                  2023,
                                  7,
                                  3
                                ],
                                "activatedOnDate": [
                                  2023,
                                  7,
                                  3
                                ]
                              },
                              "clientNonPersonDetails": {
                                "constitution": {
                                  "active": false,
                                  "mandatory": false,
                                  "systemDefined": false
                                },
                                "mainBusinessLine": {
                                  "active": false,
                                  "mandatory": false,
                                  "systemDefined": false
                                }
                              },
                              "clientTransferOptionData": {
                                "externalCardDebitAllowed": false,
                                "externalCardCreditAllowed": false
                              }
                            },
                          {
                              "id": 1,
                              "accountNo": "000000001",
                              "status": {
                                "id": 300,
                                "code": "clientStatusType.active",
                                "value": "Active"
                              },
                              "subStatus": {
                                "active": false,
                                "mandatory": false,
                                "systemDefined": false
                              },
                              "active": true,
                              "activationDate": [
                                2014,
                                3,
                                7
                              ],
                              "firstname": "Smith",
                              "lastname": "R",
                              "displayName": "Smith R",
                              "gender": {
                                "active": false,
                                "mandatory": false,
                                "systemDefined": false
                              },
                              "clientType": {
                                "active": false,
                                "mandatory": false,
                                "systemDefined": false
                              },
                              "clientClassification": {
                                "id": 660,
                                "active": false,
                                "mandatory": false,
                                "systemDefined": false
                              },
                              "isStaff": false,
                              "skipAvs": false,
                              "officeId": 1,
                              "staffId": 1,
                              "timeline": {
                                "submittedOnDate": [
                                  2010,
                                  1,
                                  1
                                ],
                                "activatedOnDate": [
                                  2014,
                                  3,
                                  7
                                ]
                              },
                              "clientNonPersonDetails": {
                                "constitution": {
                                  "active": false,
                                  "mandatory": false,
                                  "systemDefined": false
                                },
                                "mainBusinessLine": {
                                  "active": false,
                                  "mandatory": false,
                                  "systemDefined": false
                                }
                              },
                              "clientTransferOptionData": {
                                "externalCardDebitAllowed": false,
                                "externalCardCreditAllowed": false
                              }
                            }
                          ]
                        }
                     
              headers: {}
            '400':
              description: "The request fails if the tenant Id is missing or incorrect."
              content:
                application/json:
                  examples:
                    Result:
                      value: {
                            "timestamp": "2023-07-03T06:41:54.148+00:00",
                            "status": 400,
                            "error": "Bad Request",
                            "path": "/oauth/token"
                            }    
              headers: {}
      deprecated: false
      servers:
      - url: https://api.cloud.mbanq.com/v1
        variables: {}
    parameters: []
  /users:
    post:
      tags:
      - Onboarding
      summary: Enable Self-service Access
      description: "Use this API to enable Self-service Access.\n\nMbanq Cloud is able to store client logins directly within self service access provisioned for a client. Additionally, it isolates data access by allowing API calls associated with accounts, cards, loans, and transfers by using the Client log-in rather than broader system users."
      operationId: EnableSelf-serviceAccess
      parameters:
      - name: tenantid
        in: header
        description: "The ID of your banking instance visible in the MBANQ Console. You need to pass this value as one of the following: \n(1) The 'tenantIdentifier' query parameter. \n(2) The 'tenantId' header parameter."
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: 'You need to update the values in the JSON including the {{clientId}} parameter.'
        content:
          application/json:
            schema:
              type: string
              examples:
              - >-
                {
                    "email": "some@email.com",
                    "firstname": "Robo",
                    "lastname": "Cop",
                    "officeId": 1,
                    "password": "!User089!",
                    "repeatPassword": "!User089!",
                    "roles": ["2"],
                    "sendPasswordToEmail": false,
                    "username": "robocop4",
                    "isSelfServiceUser": true,
                    "clients": [{{clientId}}]
                  }
              contentMediaType: application/json
            example: >-
              {
                  "email": "some@email.com",
                  "firstname": "Robo",
                  "lastname": "Cop",
                  "officeId": 1,
                  "password": "!User089!",
                  "repeatPassword": "!User089!",
                  "roles": ["2"],
                  "sendPasswordToEmail": false,
                  "username": "robocop4",
                  "isSelfServiceUser": true,
                  "clients": [{{clientId}}]
                }
        required: true
      responses:
          '200':
            description: 'The self-service access is enabled.'
            content:
              application/json:
                examples:
                  Result:
                    value: {
                      "officeId": 1,
                      "clientId": 1,
                      "resourceId": 107,
                      "data": {
                        "client": {
                          "officeName": "Head Office",
                          "displayName": "Smith R",
                          "accountNo": "000000001",
                          "id": 1,
                          "status": "Active"
                        },
                        "maker": {
                          "firstName": "App",
                          "lastName": "Administrator",
                          "id": 1,
                          "email": "documents@gwocu.com",
                          "username": "admin"
                        },
                        "createdUser": {
                          "firstName": "Robo",
                          "lastName": "Cop",
                          "id": 107,
                          "email": "some@email.com",
                          "username": "robocop4"
                        }
                      }
                    }
            headers: {}
          '400':
            description: "The request fails due duplicate user name."
            content:
              application/json:
                examples:
                  Result:
                    value: {
                      "developerMessage": "The request caused a data integrity issue to be fired by the database.",
                      "httpStatusCode": "403",
                      "defaultUserMessage": "User with username `robocop4` already exists.",
                      "userMessageGlobalisationCode": "error.msg.user.duplicate.username",
                      "errors": [
                        {
                          "developerMessage": "User with username `robocop4` already exists.",
                          "defaultUserMessage": "User with username `robocop4` already exists.",
                          "userMessageGlobalisationCode": "error.msg.user.duplicate.username",
                          "parameterName": "username",
                          "value": null,
                          "args": [
                            {
                              "value": "robocop4"
                            }
                          ]
                        }
                      ]
                    } 
            headers: {}
      deprecated: false
      servers:
      - url: https://v1
        variables: {}
    parameters: []
  /clients/{clientId}:
    put:
      tags:
      - Onboarding
      summary: Update client
      description: >-
        Use this API to update a client. 
        
        
        **Note:** You can update any of the basic attributes of a client (but not its associations) using this API.


        Changing the relationship between a client and its office is not supported through this API. An API specific to handling **transfers** of clients between offices is available for the same.


        Example requests:

        
        - `PUT /clients/1`
      operationId: Updateclient
      parameters:
      - name: tenantid
        in: header
        description: "The ID of your banking instance visible in the MBANQ Console. You need to pass this value as one of the following: \n(1) The 'tenantIdentifier' query parameter. \n(2) The 'tenantId' header parameter."
        required: true
        style: simple
        schema:
          type: string
      - name: clientId
        in: path
        description: 'The associated client Id.'
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateclientRequest'
              - examples:
                - externalId: 786444UUUYYH7
              contentMediaType: application/json
            example:
              externalId: 4786444UUUYYH7
        required: true
      responses:
          '200':
            description: 'The client is updated successfully.'
            content:
              application/json:
                examples:
                  Result:
                    value: {
                      "officeId": 1,
                      "clientId": 15,
                      "resourceId": 15,
                      "changes": {
                        "externalId": "4786444UUUYYH7"
                      }
                    }
            headers: {}
          '404':
            description: "The request fails if the client Id is incorrect."
            content:
              application/json:
                examples:
                  Result:
                    value: {
                      "developerMessage": "The requested resource is not available.",
                      "httpStatusCode": "404",
                      "defaultUserMessage": "The requested resource is not available.",
                      "userMessageGlobalisationCode": "error.msg.resource.not.found",
                      "errors": [
                        {
                          "developerMessage": "Client with identifier 12354354 does not exist",
                          "defaultUserMessage": "Client with identifier 12354354 does not exist",
                          "userMessageGlobalisationCode": "error.msg.client.id.invalid",
                          "parameterName": "id",
                          "value": null,
                          "args": [
                            {
                              "value": 12354354
                            }
                          ]
                        }
                      ]
                    } 
            headers: {}
      deprecated: false
      servers:
      - url: https://v1
        variables: {}
    get:
      tags:
      - Onboarding
      summary: Get Client By Id
      description: "Use this API to get a client. You need to specify the client Id. \n\nExample Requests\n\n- `/clients/1`\n- `/clients/1?template=true`\n- `/clients/1?fields=id,displayName,officeName`"
      operationId: GetClientById
      parameters:
      - name: content-type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      - name: tenantid
        in: header
        description: "The ID of your banking instance visible in the MBANQ Console. You need to pass this value as one of the following: \n(1) The 'tenantIdentifier' query parameter. \n(2) The 'tenantId' header parameter."
        required: true
        style: simple
        schema:
          type: string
      - name: clientId
        in: path
        description: 'The associated client Id.'
        required: true
        style: simple
        schema:
          type: string
      responses:
            '200':
              description: 'The client is retrieved successfully.'
              content:
                application/json:
                  examples:
                    Result:
                      value: {
                        "id": 15,
                        "accountNo": "000000015",
                        "externalId": "4786444UUUYYH7",
                        "status": {
                          "id": 300,
                          "code": "clientStatusType.active",
                          "value": "Active"
                        },
                        "subStatus": {
                          "active": false,
                          "mandatory": false,
                          "systemDefined": false
                        },
                        "active": true,
                        "activationDate": [
                          2023,
                          6,
                          29
                        ],
                        "firstname": "RJ",
                        "lastname": "Last",
                        "displayName": "RJ Last",
                        "emailAddress": "rutujajoshi@quickdraft.pro",
                        "dateOfBirth": [
                          1990,
                          6,
                          1
                        ],
                        "gender": {
                          "id": 635,
                          "name": "Female",
                          "active": false,
                          "mandatory": false,
                          "systemDefined": false
                        },
                        "clientType": {
                          "active": false,
                          "mandatory": false,
                          "systemDefined": false
                        },
                        "clientClassification": {
                          "id": 651,
                          "name": "Default",
                          "active": false,
                          "mandatory": false,
                          "systemDefined": false
                        },
                        "isStaff": false,
                        "skipAvs": false,
                        "officeId": 1,
                        "officeName": "Head Office",
                        "timeline": {
                          "submittedOnDate": [
                            2023,
                            6,
                            28
                          ],
                          "submittedByUsername": "admin",
                          "submittedByFirstname": "App",
                          "submittedByLastname": "Administrator",
                          "activatedOnDate": [
                            2023,
                            6,
                            29
                          ],
                          "activatedByUsername": "admin",
                          "activatedByFirstname": "App",
                          "activatedByLastname": "Administrator"
                        },
                        "savingsAccountId": 14,
                        "legalForm": {
                          "id": 1,
                          "code": "legalFormType.person",
                          "value": "PERSON"
                        },
                        "groups": [],
                        "clientNonPersonDetails": {
                          "constitution": {
                            "active": false,
                            "mandatory": false,
                            "systemDefined": false
                          },
                          "mainBusinessLine": {
                            "active": false,
                            "mandatory": false,
                            "systemDefined": false
                          }
                        },
                        "clientTransferOptionData": {
                          "externalCardDebitAllowed": true,
                          "externalCardCreditAllowed": true
                        }
                      }
              headers: {}
            '404':
              description: "The request fails if the client Id is incorrect."
              content:
                application/json:
                  examples:
                    Result:
                      value: {
                        "developerMessage": "The requested resource is not available.",
                        "httpStatusCode": "404",
                        "defaultUserMessage": "The requested resource is not available.",
                        "userMessageGlobalisationCode": "error.msg.resource.not.found",
                        "errors": [
                          {
                            "developerMessage": "Client with identifier 123 does not exist",
                            "defaultUserMessage": "Client with identifier 123 does not exist",
                            "userMessageGlobalisationCode": "error.msg.client.id.invalid",
                            "parameterName": "id",
                            "value": null,
                            "args": [
                              {
                                "value": 123
                              }
                            ]
                          }
                        ]
                      }
              headers: {}
      deprecated: false
      servers:
      - url: https://v1
        variables: {}
    post:
      tags:
      - Verification and Activation
      summary: Verify Kyc
      description: Use this API to verify the KYC of a client. The verification needs to be done before activation of a client.
      operationId: VerifyKyc
      parameters:
      - name: command
        in: query
        description: "In this case the command value should always be 'verify'."
        required: true
        style: form
        explode: true
        schema:
          type: string
          examples:
          - verify
      - name: instance
        in: header
        description: "The ID of your banking instance visible in the MBANQ Console (tenantId)." 
        required: true
        style: simple
        schema:
          type: string
      - name: clientId
        in: path
        description: 'The associated client Id.'
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
              examples:
              - {}
              contentMediaType: text/plain
            example: {}
        required: true
      responses:
          '200':
            description: 'The verification is successful.'
            content:
              application/json:
                examples:
                  Result:
                    value: 
                      {
                        "officeId": 1,
                        "clientId": 1,
                        "resourceId": 1
                      }
              headers: {}
          '400':
            description: "The request fails if the tenant Id is missing or incorrect."
            content:
              application/json:
                examples:
                  Result:
                    value: {
                          "timestamp": "2023-07-03T06:41:54.148+00:00",
                          "status": 400,
                          "error": "Bad Request",
                          "path": "/oauth/token"
                          }    
            headers: {}
      deprecated: false
      servers:
      - url: https://v1
        variables: {}
    parameters: []
  /client/{clientId}/addresses:
    get:
      tags:
      - Onboarding
      summary: Get address
      description: "Use this API to get the address of a client.\n\nExample Requests:\n\n- `clients/1/addresses`"
      operationId: Getaddress
      parameters:
      - name: content-type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      - name: tenantid
        in: header
        description: "The ID of your banking instance visible in the MBANQ Console. You need to pass this value as one of the following: \n(1) The 'tenantIdentifier' query parameter. \n(2) The 'tenantId' header parameter."
        required: true
        style: simple
        schema:
          type: string
      - name: clientId
        in: path
        description: 'The associated Client Id.'
        required: true
        style: simple
        schema:
          type: string
      responses:
            '200':
              description: 'The address is retrieved successfully.'
              content:
                application/json:
                  examples:
                    Result:
                      value: [
                        {
                          "client_id": 12,
                          "addressType": "PRIMARY",
                          "addressId": 12,
                          "addressTypeId": 31,
                          "isActive": true,
                          "addressLine1": "150 Candlelight Drive",
                          "city": "Pearland",
                          "stateProvinceId": 580,
                          "countryName": "United States",
                          "stateName": "Texas",
                          "countryId": 284,
                          "postalCode": "77581",
                          "minifiedAddress": [
                            "150 Candlelight Drive",
                            "Pearland TX 77581 US",
                            null
                          ]
                        }
                      ]
              headers: {}
            '400':
              description: "The request fails if the tenant Id is missing or incorrect."
              content:
                application/json:
                  examples:
                    Result:
                      value: {
                            "timestamp": "2023-07-03T06:41:54.148+00:00",
                            "status": 400,
                            "error": "Bad Request",
                            "path": "/oauth/token"
                            }    
              headers: {}
      deprecated: false
      servers:
      - url: https://v1
        variables: {}
    post:
      tags:
      - Onboarding
      summary: Add Address
      operationId: AddAddress
      description: "Use this API to add an address.\n\nThe address module is optional. You can configure it by using the GlobalConfiguration setting: `enable-address` by setting its value to true."
      parameters:
      - name: type
        in: query
        description: 'The type of the address.'
        required: true
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
          examples:
          - 31
      - name: tenantid
        in: header
        description: "The ID of your banking instance visible in the MBANQ Console. You need to pass this value as one of the following: \n(1) The 'tenantIdentifier' query parameter. \n(2) The 'tenantId' header parameter."
        required: true
        style: simple
        schema:
          type: string
      - name: clientId
        in: path
        description: 'The client Id associated with this address.'
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AddAddressRequest'
              - examples:
                - addressLine1: Kandivali
                  addressLine2: plot47
                  addressLine3: charkop
                  city: Mumbai
                  stateProvinceId: 546
                  countryId: 284
                  postalCode: '40004'
                  isActive: true
              contentMediaType: application/json
            example:
              addressLine1: Kandivali
              addressLine2: plot47
              addressLine3: charkop
              city: Mumbai
              stateProvinceId: 546
              countryId: 284
              postalCode: '40004'
              isActive: true
        required: true
      responses:
          '200':
            description: 'The address is added successfully.'
            content:
              application/json:
                examples:
                  Result:
                    value: 
                      {
                        "clientId": 15,
                        "resourceId": 3
                      }
              headers: {}
          '404':
            description: "The request fails if the address type is incorrect."
            content:
              application/json:
                examples:
                  Result:
                    value: {
                      "developerMessage": "The requested resource is not available.",
                      "httpStatusCode": "404",
                      "defaultUserMessage": "The requested resource is not available.",
                      "userMessageGlobalisationCode": "error.msg.resource.not.found",
                      "errors": [
                        {
                          "developerMessage": "Code value with identifier 0 does not exist for a code with name ADDRESS_TYPE",
                          "defaultUserMessage": "Code value with identifier 0 does not exist for a code with name ADDRESS_TYPE",
                          "userMessageGlobalisationCode": "error.msg.codevalue.codename.id.combination.invalid",
                          "parameterName": "id",
                          "value": null,
                          "args": [
                            {
                              "value": 0
                            },
                            {
                              "value": "ADDRESS_TYPE"
                            }
                          ]
                        }
                      ]
                    }
                
            headers: {}
      deprecated: false
      servers:
      - url: https://v1
        variables: {}
    put:
      tags:
      - Misc
      summary: Enable Address
      description: >-
        Use this API to enable the address added for a client.



        Example requests:

        
        `PUT client/1/addresses?type=40`
      operationId: EnableAddress
      parameters:
      - name: type
        in: query
        description: 'The associated address type.'
        required: true
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
          examples:
          - 31
      - name: tenantid
        in: header
        description: "The ID of your banking instance visible in the MBANQ Console. You need to pass this value as one of the following: \n(1) The 'tenantIdentifier' query parameter. \n(2) The 'tenantId' header parameter."
        required: true
        style: simple
        schema:
          type: string
      - name: clientId
        in: path
        description: 'The associated client Id.'
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/EnableAddressRequest'
              - examples:
                - addressId: 22
                  isActive: true
              contentMediaType: application/json
            example:
              addressId: 22
              isActive: true
        required: true
      responses:
          '200':
            description: 'The address is successfully enabled.'
            content:
              application/json:
                examples:
                  Result:
                    value: 
                      {
                        "clientId": 12,
                        "resourceId": 2
                      }
              headers: {}
          '400':
            description: "The request Failed if the address Id is missing."
            content:
              application/json:
                examples:
                  Result:
                    value: {
                      "developerMessage": "The request was invalid. This typically will happen due to validation errors which are provided.",
                      "httpStatusCode": "400",
                      "defaultUserMessage": "Validation errors exist.",
                      "userMessageGlobalisationCode": "validation.msg.validation.errors.exist",
                      "errors": [
                        {
                          "developerMessage": "The required parameter was missing from the request",
                          "defaultUserMessage": "The required parameter was missing from the request",
                          "userMessageGlobalisationCode": "error.msg.update.address.parameter.missing",
                          "parameterName": "addressId",
                          "value": null,
                          "args": []
                        }
                      ]
                    }
            headers: {}
      deprecated: false
      servers:
      - url: https://v1
        variables: {}
    parameters: []
  /client/addresses/template:
    get:
      tags:
      - Onboarding
      summary: Get Address Template
      description: >-
        Use this API to get a client address template.


        The address module is optional. You can configure it by using the GlobalConfiguration setting: enable-address by setting its value to true.


        **Field Descriptions**


        | Fields | Description |

        | --- | --- |

        | `addressTypeId` | The Address module can store multiple types of client addresses. The AddressTypeId code is used to store the different types of addresses. |

        | `street`, `addressLine1`, `addressLine2`, `addressLine3`, `townVillage`, `city`, `countyDistrict`, `stateProvinceId`, `countryId`, `postalCode`, `latitude`, `longitude`, `createdBy`, `createdOn`, `updatedBy`, `updatedOn` | These are the fields of address that can be configured. |
      operationId: GetAddressTemplate
      parameters:
      - name: content-type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      - name: tenantid
        in: header
        description: "The ID of your banking instance visible in the MBANQ Console. You need to pass this value as one of the following: \n(1) The 'tenantIdentifier' query parameter. \n(2) The 'tenantId' header parameter."
        required: true
        style: simple
        schema:
          type: string
      responses:
            '200':
              description: 'The address template is retrieved successfully.'
              content:
                application/json:
                  examples:
                    Result:
                      value: 
                        {
  "countryIdOptions": [{
    "id": 139,
    "name": "India",
    "position": 0,
    "active": true,
    "mandatory": false,
    "systemDefined": false,
    "parentId": 628,
    "identifier": "IN"
  }
  ],
  "addressTypeIdOptions": [{
    "id": 32,
    "name": "BUSINESS",
    "position": 0,
    "active": true,
    "mandatory": false,
    "systemDefined": false,
    "parentId": 0
  },
    {
      "id": 33,
      "name": "POSTAL",
      "position": 0,
      "active": true,
      "mandatory": false,
      "systemDefined": false,
      "parentId": 0
    },
    {
      "id": 34,
      "name": "TAX",
      "position": 0,
      "active": true,
      "mandatory": false,
      "systemDefined": false,
      "parentId": 0
    },
    {
      "id": 31,
      "name": "PRIMARY",
      "position": 0,
      "active": true,
      "mandatory": false,
      "systemDefined": true,
      "parentId": 0
    }
  ]
}
                headers: {}
            '400':
              description: "The request fails if the tenant Id is missing or incorrect."
              content:
                application/json:
                  examples:
                    Result:
                      value: {
                            "timestamp": "2023-07-03T06:41:54.148+00:00",
                            "status": 400,
                            "error": "Bad Request",
                            "path": "/oauth/token"
                            }    
              headers: {}
      deprecated: false
      servers:
      - url: https://v1
        variables: {}
    parameters: []
  /clients/{clientId}/identifiers/template:
    get:
      tags:
      - Onboarding
      summary: List permitted Client Identifiers
      description: "Use this API to retrieve a list of all permitted identity document types for a customer. These Identity types can then be used for associating a new Identitiy for a customer.\n\nClient Identifiers refer to documents that are used to uniquely identify a customer.  \nE.g. Drivers License, Passport, Ration card etc.\n\n| Field | Description |\n| --- | --- |\n| `documentKey` | A number/string that uniquely identifies a particular document. E.g. A Driver's License number for a driving license. |\n| `documentType` | Type of the identification document. E.g. License, Passport. |\n| `description` | Any user comments to be associated with the Client Identifier. |\n| `status` | The status of Client Identifier. E.g. active |\n| `issuedBy` | The entity that issued the Client Identifier. |\n\nThis is useful for building maintenance user interface screens for client applications. The template data returned consists of any or all of:\n\n- Field Defaults\n- Allowed Value Lists\n    \n\nExample Request:\n\n`/clients/1/identifiers/template`\n\n"
      operationId: ListpermittedClientIdentifiers
      parameters:
      - name: content-type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      - name: tenantid
        in: header
        description: "The ID of your banking instance visible in the MBANQ Console. You need to pass this value as one of the following: \n(1) The 'tenantIdentifier' query parameter. \n(2) The 'tenantId' header parameter."
        required: true
        style: simple
        schema:
          type: string
      - name: clientId
        in: path
        description: 'The associated Client Id.'
        required: true
        style: simple
        schema:
          type: string
      responses:
            '200':
              description: 'List of permitted Client Identifiers is retrieved successfully.'
              content:
                application/json:
                  examples:
                    Result:
                      value: 
                        {
  "allowedDocumentTypes": [
    {
      "id": 4859,
      "name": "SocureDocumentUUID",
      "position": 0,
      "description": "Socure Document UUID",
      "active": true,
      "mandatory": false,
      "systemDefined": true,
      "parentId": 0
    },
    {
      "id": 647,
      "name": "Visa",
      "position": 0,
      "description": "A stamp on a valid passport, which indicates eligibility to enter a Country",
      "active": true,
      "mandatory": false,
      "systemDefined": true,
      "parentId": 0
    },
    {
      "id": 638,
      "name": "Taxpayer Identification Number",
      "position": 0,
      "description": "Tax Processing number (ITIN) issued by the Internal Revenue Service",
      "active": true,
      "mandatory": false,
      "systemDefined": true,
      "parentId": 0
    },
    {
      "id": 639,
      "name": "Driver's License",
      "position": 0,
      "description": "Driver's Licence issued by state government",
      "active": true,
      "mandatory": false,
      "systemDefined": true,
      "parentId": 0
    },
    {
      "id": 637,
      "name": "Social Security Number",
      "position": 0,
      "description": "Social Security Card issued by state government",
      "active": true,
      "mandatory": false,
      "systemDefined": true,
      "parentId": 0
    },
    {
      "id": 641,
      "name": "State Identity Card",
      "position": 0,
      "description": "ID issued by a State Government",
      "active": true,
      "mandatory": false,
      "systemDefined": true,
      "parentId": 0
    },
    {
      "id": 642,
      "name": "Work permit (EAD) card",
      "position": 0,
      "description": "Employment Authorization Card issued by the federal government",
      "active": true,
      "mandatory": false,
      "systemDefined": true,
      "parentId": 0
    },
    {
      "id": 643,
      "name": "Permanent Resident Card",
      "position": 0,
      "description": "Green Card issued by the federal government",
      "active": true,
      "mandatory": false,
      "systemDefined": true,
      "parentId": 0
    },
    {
      "id": 644,
      "name": "Foreign Passport",
      "position": 0,
      "description": "Biodata page of a passport issued by a foreign government",
      "active": true,
      "mandatory": false,
      "systemDefined": true,
      "parentId": 0
    },
    {
      "id": 645,
      "name": "Foreign Driver's License",
      "position": 0,
      "description": "Driving license issued by a foreign country",
      "active": true,
      "mandatory": false,
      "systemDefined": true,
      "parentId": 0
    },
    {
      "id": 646,
      "name": "Consular ID",
      "position": 0,
      "description": "Identification cards issued by some governments to their citizens who are living in foreign countries",
      "active": true,
      "mandatory": false,
      "systemDefined": true,
      "parentId": 0
    },
    {
      "id": 4861,
      "name": "Passport Id",
      "position": 1,
      "active": true,
      "mandatory": false,
      "systemDefined": false,
      "parentId": 0
    },
    {
      "id": 1,
      "name": "Passport",
      "position": 1,
      "description": "Biodata page of a passport issued by Federal Government",
      "active": true,
      "mandatory": false,
      "systemDefined": true,
      "parentId": 0
    },
    {
      "id": 648,
      "name": "Other",
      "position": 1,
      "description": "Any other Identity documents like utility bills which can be used to prove residency",
      "active": true,
      "mandatory": false,
      "systemDefined": true,
      "parentId": 0
    },
    {
      "id": 2,
      "name": "Id",
      "position": 2,
      "active": true,
      "mandatory": false,
      "systemDefined": false,
      "parentId": 0
    },
    {
      "id": 4862,
      "name": "Government Id",
      "position": 2,
      "active": true,
      "mandatory": false,
      "systemDefined": false,
      "parentId": 0
    },
    {
      "id": 4,
      "name": "Any Other Id Type",
      "position": 4,
      "active": true,
      "mandatory": false,
      "systemDefined": false,
      "parentId": 0
    },
    {
      "id": 4869,
      "name": "Ration Card",
      "position": 5,
      "active": true,
      "mandatory": false,
      "systemDefined": false,
      "parentId": 0
    },
    {
      "id": 4868,
      "name": "Voter ID",
      "position": 6,
      "active": true,
      "mandatory": false,
      "systemDefined": false,
      "parentId": 0
    }
  ]
}
                headers: {}
            '400':
              description: "The request fails if the tenant Id is missing or incorrect."
              content:
                application/json:
                  examples:
                    Result:
                      value: {
                            "timestamp": "2023-07-03T06:41:54.148+00:00",
                            "status": 400,
                            "error": "Bad Request",
                            "path": "/oauth/token"
                            }    
              headers: {}
      deprecated: false
      servers:
      - url: https://v1
        variables: {}
    parameters: []
  /clients/{clientId}/identifiers:
    post:
      tags:
      - Onboarding
      summary: Create Client identifier
      description: "Use this API to create a Client Identifier.\n\n Client Identifiers refer to documents that are used to uniquely identify a customer.  \nE.g. Drivers License, Passport, Ration card etc. You need to specify the client Id."
      operationId: CreateClientidentifier
      parameters:
      - name: tenantid
        in: header
        description: "The ID of your banking instance visible in the MBANQ Console. You need to pass this value as one of the following: \n(1) The 'tenantIdentifier' query parameter. \n(2) The 'tenantId' header parameter."
        required: true
        style: simple
        schema:
          type: string
      - name: clientId
        in: path
        description: 'The associated client Id.'
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateClientidentifierRequest'
              - examples:
                - documentTypeId: '647'
                  documentKey: '1234567'
                  status: Active
                  description: Document has been verified
                  issuedBy: DMV
              contentMediaType: application/json
            example:
              documentTypeId: '647'
              documentKey: '1234567'
              status: Active
              description: Document has been verified
              issuedBy: DMV
        required: true
      responses:
          '200':
            description: 'The client identifier is created successfully.'
            content:
              application/json:
                examples:
                  Result:
                    value: 
                      {
                        "officeId": 1,
                        "clientId": 15,
                        "resourceId": 1
                      }
              headers: {}
          '404':
            description: "The request fails if the client Id is incorrect."
            content:
              application/json:
                examples:
                  Result:
                    value: {
                      "developerMessage": "The requested resource is not available.",
                      "httpStatusCode": "404",
                      "defaultUserMessage": "The requested resource is not available.",
                      "userMessageGlobalisationCode": "error.msg.resource.not.found",
                      "errors": [
                        {
                          "developerMessage": "Client with identifier 111111 does not exist",
                          "defaultUserMessage": "Client with identifier 111111 does not exist",
                          "userMessageGlobalisationCode": "error.msg.client.id.invalid",
                          "parameterName": "id",
                          "value": null,
                          "args": [
                            {
                              "value": 111111
                            }
                          ]
                        }
                      ]
                    }  
            headers: {}
      deprecated: false
      servers:
      - url: https://v1
        variables: {}
    get:
      tags:
      - Onboarding
      summary: List Client Identifiers
      description: >-

        Use this API to retrieve a list of the client identifiers. You need to specify the client Id.


        Client Identifiers refer to documents that are used to uniquely identify a customer.E.g. Drivers License, Passport, Ration card etc.



        Example Requests:


        - `/clients/1/identifiers`

        - `/clients/1/identifiers?fields=documentKey,documentType,description`
      operationId: ListClientIdentifiers
      parameters:
      - name: content-type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      - name: tenantid
        in: header
        description: "The ID of your banking instance visible in the MBANQ Console. You need to pass this value as one of the following: \n(1) The 'tenantIdentifier' query parameter. \n(2) The 'tenantId' header parameter."
        required: true
        style: simple
        schema:
          type: string
      - name: clientId
        in: path
        description: 'The associated client Id.'
        required: true
        style: simple
        schema:
          type: string
      responses:
            '200':
              description: 'The list client identifiers is retrieved successfully.'
              content:
                application/json:
                  examples:
                    Result:
                      value: 
                        [
                          {
                            "id": 1,
                            "clientId": 15,
                            "documentType": {
                              "id": 647,
                              "name": "Visa"
                            },
                            "documentKey": "1234567",
                            "description": "Document has been verified",
                            "status": "clientIdentifierStatusType.active",
                            "issuedBy": "DMV"
                          }
                        ]
                headers: {}
            '400':
              description: "The request fails if the tenant Id is missing or incorrect."
              content:
                application/json:
                  examples:
                    Result:
                      value: {
                            "timestamp": "2023-07-03T06:41:54.148+00:00",
                            "status": 400,
                            "error": "Bad Request",
                            "path": "/oauth/token"
                            }    
              headers: {}
      deprecated: false
      servers:
      - url: https://v1
        variables: {}
    parameters: []
  /client_identifiers/{kycId}/documents:
    post:
      tags:
      - Onboarding
      summary: Attach documents to Client Identifier
      description: >-
        Use this API to attach documents to the client identifier.


        **Note:**
        You need to upload the associated files.

        
        **Mandatory Fields**


        - `file` and `name`
      operationId: AttachdocumentstoClientIdentifier
      parameters:
      - name: instance
        in: header
        description: "The ID of your banking instance visible in the MBANQ Console (tenantId)."
        required: true
        style: simple
        schema:
          type: string
      - name: kycId
        in: path
        description: 'The associated KYC Id.'
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            encoding: {}
            schema:
              required:
              - name
              - file
              type: object
              properties:
                name:
                  type: string
                  description: "Name or summary of the document."
                  examples:
                  - some file new 2
                type:
                    type: string
                    description: "Type of document.E.g. passport, ID, etc"
                    examples:
                    - passport
                description:
                    type: string
                    description: "The description of the document."
                file:
                  type: string
                  description: "The file to be uploaded."
                  format: binary
              contentMediaType: multipart/form-data
        required: false
      responses:
          '200':
            description: ''
            content:
              application/json:
                examples:
                  Result:
                    value: 
                      {
                        "id": "264d3238-e7e5-4c4f-a6ab-09cc0a6522fd",
                        "resourceIdentifier": "264d3238-e7e5-4c4f-a6ab-09cc0a6522fd"
                      }
              headers: {}
          '400':
            description: "The request fails if the KYCId is incorrect."
            content:
              application/json:
                examples:
                  Result:
                    value: {
                      "developerMessage": "The requested resource is not available.",
                      "httpStatusCode": "404",
                      "defaultUserMessage": "The requested resource is not available.",
                      "userMessageGlobalisationCode": "error.msg.resource.not.found",
                      "errors": [
                        {
                          "developerMessage": "Resource [client identifier] with identifier [123] does not exist",
                          "defaultUserMessage": "Resource [client identifier] with identifier [123] does not exist",
                          "userMessageGlobalisationCode": "error.msg.resource.clientidentifier.not.found",
                          "parameterName": "id",
                          "value": null,
                          "args": [
                            {
                              "value": 123
                            }
                          ]
                        }
                      ]
                    }
            headers: {}
      deprecated: false
      servers:
      - url: https://v1
        variables: {}
    parameters: []
  /clients/{clientId1}:
    post:
      tags:
      - Onboarding
      summary: Close Client
      description: "Use this API to close a specific client. You need to specify the client Id. Clients can be closed if they do not have any non-closed loans or savings accounts.\n\nIf a client has any active loans or savings accounts, this API will result in an error.\n\nExample requests:\n\n- `POST /clients/1?command=close`\n    \n\n**Note:**\n\nAll valid reason identifier values are to be found at `/v1/codes/{codeId}/codevalues` API.\n\nExample:\n\n- closureReasonId `23` is for `BLACKLISTED`\n\n- withdrawalReasonId `28` is for `APPLICATION_CANCELLED`"
      operationId: CloseClient
      parameters:
      - name: command
        in: query
        description: "In this case the command value should always be 'close'."
        required: true
        style: form
        explode: true
        schema:
          type: string
          examples:
          - close
      - name: tenantid
        in: header
        description: "The ID of your banking instance visible in the MBANQ Console. You need to pass this value as one of the following: \n(1) The 'tenantIdentifier' query parameter. \n(2) The 'tenantId' header parameter."
        required: true
        style: simple
        schema:
          type: string
      - name: clientId1
        in: path
        description: 'The associated client Id.'
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CloseClientRequest'
              - examples:
                - dateFormat: dd MMMM yyyy
                  locale: en
                  closureDate: 25 June 2023
                  closureReasonId: '23'
              contentMediaType: application/json
            example:
              dateFormat: dd MMMM yyyy
              locale: en
              closureDate: 25 June 2023
              closureReasonId: '23'
        required: true
      responses:
          '200':
            description: 'The client is closed successfully.'
            content:
              application/json:
                examples:
                  Result:
                    value: 
                      {
                        "clientId": 15,
                        "resourceId": 15
                      }
              headers: {}
          '404':
            description: "The request fails if the client Id is incorrect."
            content:
              application/json:
                examples:
                  Result:
                    value: {
                      "developerMessage": "The requested resource is not available.",
                      "httpStatusCode": "404",
                      "defaultUserMessage": "The requested resource is not available.",
                      "userMessageGlobalisationCode": "error.msg.resource.not.found",
                      "errors": [
                        {
                          "developerMessage": "Client with identifier 17 does not exist",
                          "defaultUserMessage": "Client with identifier 17 does not exist",
                          "userMessageGlobalisationCode": "error.msg.client.id.invalid",
                          "parameterName": "id",
                          "value": null,
                          "args": [
                            {
                              "value": 17
                            }
                          ]
                        }
                      ]
                    }
            headers: {}
      deprecated: false
      servers:
      - url: https://v1
        variables: {}
    parameters: []
  /clients/{clientId}/verificationstatus:
    get:
      tags:
      - Verification and Activation
      summary: Get Verification Status
      description: >-
        Use this API to retrieve the verification status of a client. The status can is one of the following:


        - **PENDING**: Verification has not been initiated.

        - **IN_PROGRESS**: Verification is currently in progress.

        - **APPROVED**: Verification has been completed successfully.

        - **REJECTED**: Verification has failed.
      operationId: GetVerificationStatus
      parameters:
      - name: content-type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      - name: tenantid
        in: header
        description: "The ID of your banking instance visible in the MBANQ Console. You need to pass this value as one of the following: \n(1) The 'tenantIdentifier' query parameter. \n(2) The 'tenantId' header parameter."
        required: true
        style: simple
        schema:
          type: string
      - name: clientId
        in: path
        description: 'The associated client Id.'
        required: true
        style: simple
        schema:
          type: string
      responses:
            '200':
              description: 'The verification status is obtained successfully.'
              content:
                application/json:
                  examples:
                    Result:
                      value: 
                        {
                          "id": 1,
                          "accountNo": "000000001",
                          "verificationStatus": {
                            "id": 1,
                            "value": "PENDING"
                          },
                          "identifiers": [
                            {
                              "id": 1,
                              "clientId": 1,
                              "documentType": {
                                "id": 676,
                                "name": "Foreign Passport",
                                "position": 0,
                                "description": "Biodata page of a passport issued by a foreign government",
                                "active": true,
                                "mandatory": false,
                                "systemDefined": true
                              },
                              "documentKey": "909090909090",
                              "status": "clientIdentifierStatusType.active",
                              "verificationStatus": {
                                "id": 1,
                                "value": "PENDING"
                              }
                            }
                          ]
                        }
                headers: {}
            '404':
              description: "The request fails if the client Id is incorrect."
              content:
                application/json:
                  examples:
                    Result:
                      value: {
                        "developerMessage": "The requested resource is not available.",
                        "httpStatusCode": "404",
                        "defaultUserMessage": "The requested resource is not available.",
                        "userMessageGlobalisationCode": "error.msg.resource.not.found",
                        "errors": [
                          {
                            "developerMessage": "Client with identifier 1234 does not exist",
                            "defaultUserMessage": "Client with identifier 1234 does not exist",
                            "userMessageGlobalisationCode": "error.msg.client.id.invalid",
                            "parameterName": "id",
                            "value": null,
                            "args": [
                              {
                                "value": 1234
                              }
                            ]
                          }
                        ]
                      }
              headers: {}
      deprecated: false
      servers:
      - url: https://v1
        variables: {}
    parameters: []
  /clients/{clientId2}:
    post:
      tags:
      - Verification and Activation
      summary: Activate Client
      description: >-
          Use this API to activate a Client. Clients can be created in a 'pending' state. This API exists to enable client activation hence the client becomes an approved member of the Financial Institution. 
          You need to specify the client Id.
          
          If the client happens to be already active this API will result in an error.
          

          Before activating a client, check block-activation-of-unverified-clients configuration. If enabled, you need to verify the client-verify-kyc first.
      operationId: ActivateClient
      parameters:
      - name: command
        in: query
        description: "In this case the command value should always be 'active'."
        required: true
        style: form
        explode: true
        schema:
          type: string
          examples:
          - activate
      - name: tenantid
        in: header
        description: "The ID of your banking instance visible in the MBANQ Console. You need to pass this value as one of the following: \n(1) The 'tenantIdentifier' query parameter. \n(2) The 'tenantId' header parameter."
        required: true
        style: simple
        schema:
          type: string
      - name: clientId2
        in: path
        description: 'The associated client Id.'
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ActivateClientRequest'
              - examples:
                - locale: en
                  dateFormat: dd MMMM yyyy
                  activationDate: 13 June 2023
              contentMediaType: application/json
            example:
              locale: en
              dateFormat: dd MMMM yyyy
              activationDate: 13 June 2023
        required: true
      responses:
          '200':
            description: 'The client is activated successfully.'
            content:
              application/json:
                examples:
                  Result:
                    value: 
                      {
                        "officeId": 1,
                        "clientId": 24,
                        "savingsId": 18,
                        "resourceId": 24
                      }
              headers: {}
          '404':
            description: "The request fails if the client Id is incorrect."
            content:
              application/json:
                examples:
                  Result:
                    value: {
                      "developerMessage": "The requested resource is not available.",
                      "httpStatusCode": "404",
                      "defaultUserMessage": "The requested resource is not available.",
                      "userMessageGlobalisationCode": "error.msg.resource.not.found",
                      "errors": [
                        {
                          "developerMessage": "Client with identifier 13 does not exist",
                          "defaultUserMessage": "Client with identifier 13 does not exist",
                          "userMessageGlobalisationCode": "error.msg.client.id.invalid",
                          "parameterName": "id",
                          "value": null,
                          "args": [
                            {
                              "value": 13
                            }
                          ]
                        }
                      ]
                    }  
            headers: {}
      deprecated: false
      servers:
      - url: https://v1
        variables: {}
    parameters: []
  /savingsaccounts:
    post:
      tags:
      - Accounts
      summary: Create & Activate Account
      description: >-
        Use this API to create & activate a new account for a client.


        You will get an account id which you can use in the subsequent APIs
      operationId: CreateandActivateAccount
      parameters:
      - name: command
        in: query
        description: "In this case the command values must be: 'submit,approve,activate'."
        required: true
        style: form
        explode: true
        schema:
          type: string
          examples:
          - submit,approve,activate
      - name: tenantid
        in: header
        description: "The ID of your banking instance visible in the MBANQ Console. You need to pass this value as one of the following: \n(1) The 'tenantIdentifier' query parameter. \n(2) The 'tenantId' header parameter."
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: 'You need to update the values in the JSON including the {{clientId}} parameter.'
        content:
          application/json:
            schema:
              type: string
              examples:
              - >-
                {
                  "clientId": {{clientId}},
                  "productId": 1,
                  "locale": "en",
                  "dateFormat": "dd MMMM yyyy",
                  "submittedOnDate": "22 June 2023"
                }
              contentMediaType: application/json
            example: >-
              {
                "clientId": {{clientId}},
                "productId": 1,
                "locale": "en",
                "dateFormat": "dd MMMM yyyy",
                "submittedOnDate": "22 June 2023"
              }
        required: true
      responses:
          '200':
            description: 'The account is created and activated successfully.'
            content:
              application/json:
                examples:
                  Result:
                    value: 
                      {
                        "officeId": 1,
                        "clientId": 12,
                        "savingsId": 15,
                        "resourceId": 15,
                        "changes": {
                          "status": "ACTIVE",
                          "locale": "en",
                          "dateFormat": "dd MMMM yyyy",
                          "activatedOnDate": "22 June 2023"
                        }
                      }
              headers: {}
          '400':
            description: "The request fails if the the value for the 'command' parameter is incorrect."
            content:
              application/json:
                examples:
                  Result:
                    value: {
                      "developerMessage": "The request was invalid. This typically will happen due to validation errors which are provided.",
                      "httpStatusCode": "400",
                      "defaultUserMessage": "Validation errors exist.",
                      "userMessageGlobalisationCode": "validation.msg.validation.errors.exist",
                      "errors": [
                        {
                          "developerMessage": "The query parameter command has an unsupported value of: submit",
                          "defaultUserMessage": "The query parameter command has an unsupported value of: submit",
                          "userMessageGlobalisationCode": "error.msg.query.parameter.value.unsupported",
                          "parameterName": "command",
                          "value": null,
                          "args": [
                            {
                              "value": "command"
                            },
                            {
                              "value": "submit"
                            },
                            {
                              "value": [
                                "submit,approve,activate"
                              ]
                            }
                          ]
                        }
                      ]
                    }
            headers: {}
      deprecated: false
      servers:
      - url: https://v1
        variables: {}
    get:
      tags:
      - Accounts
      summary: Get Accounts
      description: "Use this API to retrieve the list of accounts and their details."
      operationId: GetAccounts
      parameters:
      - name: content-type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      - name: tenantid
        in: header
        description: "The ID of your banking instance visible in the MBANQ Console. You need to pass this value as one of the following: \n(1) The 'tenantIdentifier' query parameter. \n(2) The 'tenantId' header parameter."
        required: true
        style: simple
        schema:
          type: string
      responses:
            '200':
              description: 'The accounts list is retrieved successfully.'
              content:
                application/json:
                  examples:
                    Result:
                      value: 
                        {
                          "totalFilteredRecords": 4,
                          "pageItems": [
                            {
                              "id": 14,
                              "accountNo": "000000014",
                              "depositType": {
                                "id": 100,
                                "code": "depositAccountType.savingsDeposit",
                                "value": "Savings"
                              },
                              "clientId": 15,
                              "clientName": "RJ Last",
                              "savingsProductId": 1,
                              "savingsProductName": "Current Account",
                              "fieldOfficerId": 0,
                              "status": {
                                "id": 300,
                                "code": "savingsAccountStatusType.active",
                                "value": "Active",
                                "submittedAndPendingApproval": false,
                                "approved": false,
                                "rejected": false,
                                "withdrawnByApplicant": false,
                                "active": true,
                                "closed": false,
                                "prematureClosed": false,
                                "transferInProgress": false,
                                "transferOnHold": false,
                                "matured": false
                              },
                              "subStatus": {
                                "id": 0,
                                "code": "SavingsAccountSubStatusEnum.none",
                                "value": "None",
                                "none": true,
                                "inactive": false,
                                "dormant": false,
                                "escheat": false,
                                "block": false,
                                "blockCredit": false,
                                "blockDebit": false
                              },
                              "timeline": {
                                "submittedOnDate": [
                                  2023,
                                  6,
                                  29
                                ],
                                "submittedByUsername": "admin",
                                "submittedByFirstname": "App",
                                "submittedByLastname": "Administrator",
                                "approvedOnDate": [
                                  2023,
                                  6,
                                  29
                                ],
                                "approvedByUsername": "admin",
                                "approvedByFirstname": "App",
                                "approvedByLastname": "Administrator",
                                "activatedOnDate": [
                                  2023,
                                  6,
                                  29
                                ],
                                "activatedByUsername": "admin",
                                "activatedByFirstname": "App",
                                "activatedByLastname": "Administrator"
                              },
                              "currency": {
                                "code": "USD",
                                "name": "US Dollar",
                                "decimalPlaces": 2,
                                "inMultiplesOf": 0,
                                "displaySymbol": "$",
                                "nameCode": "currency.USD",
                                "displayLabel": "US Dollar ($)"
                              },
                              "nominalAnnualInterestRate": 0.5,
                              "interestCompoundingPeriodType": {
                                "id": 1,
                                "code": "savings.interest.period.savingsCompoundingInterestPeriodType.daily",
                                "value": "Daily"
                              },
                              "interestPostingPeriodType": {
                                "id": 4,
                                "code": "savings.interest.posting.period.savingsPostingInterestPeriodType.monthly",
                                "value": "Monthly"
                              },
                              "interestCalculationType": {
                                "id": 1,
                                "code": "savingsInterestCalculationType.dailybalance",
                                "value": "Daily Balance"
                              },
                              "interestCalculationDaysInYearType": {
                                "id": 365,
                                "code": "savingsInterestCalculationDaysInYearType.days365",
                                "value": "365 Days"
                              },
                              "lockinPeriodFrequency": 100,
                              "lockinPeriodFrequencyType": {
                                "id": 0,
                                "code": "savings.lockin.savingsPeriodFrequencyType.days",
                                "value": "Days"
                              },
                              "withdrawalFeeForTransfers": false,
                              "allowOverdraft": false,
                              "enforceMinRequiredBalance": false,
                              "onHoldFunds": 0,
                              "withHoldTax": false,
                              "lastActiveTransactionDate": [
                                2023,
                                6,
                                29
                              ],
                              "isDormancyTrackingActive": false,
                              "savingsAmountOnHold": 0,
                              "summary": {
                                "currency": {
                                  "code": "USD",
                                  "name": "US Dollar",
                                  "decimalPlaces": 2,
                                  "inMultiplesOf": 0,
                                  "displaySymbol": "$",
                                  "nameCode": "currency.USD",
                                  "displayLabel": "US Dollar ($)"
                                },
                                "totalInterestPosted": 0,
                                "accountBalance": 0,
                                "totalOverdraftInterestDerived": 0,
                                "interestNotPosted": 0,
                                "availableBalance": 0
                              },
                              "isLinkedToFloatingInterestRates": false,
                              "interestRateDifferential": 0,
                              "overdraftInterestRateDifferential": 0,
                              "floatingRateId": 0,
                              "isBaseLendingRate": false,
                              "isFloatingInterestRateCalculationAllowed": false,
                              "bankDetails": {
                                "routingNumber": "100000001",
                                "name": "Bank Name",
                                "swiftCode": "XXXXXX",
                                "address": "Address Line 1",
                                "city": "City",
                                "postcode": "10001"
                              },
                              "skipCollectTransferCharge": false,
                              "cardRestricted": false
                            },
                            {
                              "id": 12,
                              "accountNo": "000000012",
                              "depositType": {
                                "id": 100,
                                "code": "depositAccountType.savingsDeposit",
                                "value": "Savings"
                              },
                              "clientId": 12,
                              "clientName": "Alexa Smart",
                              "savingsProductId": 1,
                              "savingsProductName": "Current Account",
                              "fieldOfficerId": 0,
                              "status": {
                                "id": 300,
                                "code": "savingsAccountStatusType.active",
                                "value": "Active",
                                "submittedAndPendingApproval": false,
                                "approved": false,
                                "rejected": false,
                                "withdrawnByApplicant": false,
                                "active": true,
                                "closed": false,
                                "prematureClosed": false,
                                "transferInProgress": false,
                                "transferOnHold": false,
                                "matured": false
                              },
                              "subStatus": {
                                "id": 0,
                                "code": "SavingsAccountSubStatusEnum.none",
                                "value": "None",
                                "none": true,
                                "inactive": false,
                                "dormant": false,
                                "escheat": false,
                                "block": false,
                                "blockCredit": false,
                                "blockDebit": false
                              },
                              "timeline": {
                                "submittedOnDate": [
                                  2023,
                                  6,
                                  13
                                ],
                                "submittedByUsername": "admin",
                                "submittedByFirstname": "App",
                                "submittedByLastname": "Administrator",
                                "approvedOnDate": [
                                  2023,
                                  6,
                                  13
                                ],
                                "approvedByUsername": "admin",
                                "approvedByFirstname": "App",
                                "approvedByLastname": "Administrator",
                                "activatedOnDate": [
                                  2023,
                                  6,
                                  13
                                ],
                                "activatedByUsername": "admin",
                                "activatedByFirstname": "App",
                                "activatedByLastname": "Administrator"
                              },
                              "currency": {
                                "code": "USD",
                                "name": "US Dollar",
                                "decimalPlaces": 2,
                                "inMultiplesOf": 0,
                                "displaySymbol": "$",
                                "nameCode": "currency.USD",
                                "displayLabel": "US Dollar ($)"
                              },
                              "nominalAnnualInterestRate": 0.5,
                              "interestCompoundingPeriodType": {
                                "id": 1,
                                "code": "savings.interest.period.savingsCompoundingInterestPeriodType.daily",
                                "value": "Daily"
                              },
                              "interestPostingPeriodType": {
                                "id": 4,
                                "code": "savings.interest.posting.period.savingsPostingInterestPeriodType.monthly",
                                "value": "Monthly"
                              },
                              "interestCalculationType": {
                                "id": 1,
                                "code": "savingsInterestCalculationType.dailybalance",
                                "value": "Daily Balance"
                              },
                              "interestCalculationDaysInYearType": {
                                "id": 365,
                                "code": "savingsInterestCalculationDaysInYearType.days365",
                                "value": "365 Days"
                              },
                              "lockinPeriodFrequency": 100,
                              "lockinPeriodFrequencyType": {
                                "id": 0,
                                "code": "savings.lockin.savingsPeriodFrequencyType.days",
                                "value": "Days"
                              },
                              "withdrawalFeeForTransfers": false,
                              "allowOverdraft": false,
                              "enforceMinRequiredBalance": false,
                              "onHoldFunds": 0,
                              "withHoldTax": false,
                              "lastActiveTransactionDate": [
                                2023,
                                6,
                                13
                              ],
                              "isDormancyTrackingActive": false,
                              "savingsAmountOnHold": 0,
                              "summary": {
                                "currency": {
                                  "code": "USD",
                                  "name": "US Dollar",
                                  "decimalPlaces": 2,
                                  "inMultiplesOf": 0,
                                  "displaySymbol": "$",
                                  "nameCode": "currency.USD",
                                  "displayLabel": "US Dollar ($)"
                                },
                                "totalDeposits": 10000,
                                "totalInterestEarned": 3.02,
                                "totalInterestPosted": 2.47,
                                "accountBalance": 10002.47,
                                "totalOverdraftInterestDerived": 0,
                                "interestNotPosted": 0.55,
                                "lastInterestCalculationDate": [
                                  2023,
                                  7,
                                  4
                                ],
                                "availableBalance": 10002.47
                              },
                              "isLinkedToFloatingInterestRates": false,
                              "interestRateDifferential": 0,
                              "overdraftInterestRateDifferential": 0,
                              "floatingRateId": 0,
                              "isBaseLendingRate": false,
                              "isFloatingInterestRateCalculationAllowed": false,
                              "bankDetails": {
                                "routingNumber": "100000001",
                                "name": "Bank Name",
                                "swiftCode": "XXXXXX",
                                "address": "Address Line 1",
                                "city": "City",
                                "postcode": "10001"
                              },
                              "skipCollectTransferCharge": false,
                              "cardRestricted": false
                            },
                            {
                              "id": 11,
                              "accountNo": "000000011",
                              "depositType": {
                                "id": 100,
                                "code": "depositAccountType.savingsDeposit",
                                "value": "Savings"
                              },
                              "clientId": 11,
                              "clientName": "David Wise",
                              "savingsProductId": 1,
                              "savingsProductName": "Current Account",
                              "fieldOfficerId": 0,
                              "status": {
                                "id": 300,
                                "code": "savingsAccountStatusType.active",
                                "value": "Active",
                                "submittedAndPendingApproval": false,
                                "approved": false,
                                "rejected": false,
                                "withdrawnByApplicant": false,
                                "active": true,
                                "closed": false,
                                "prematureClosed": false,
                                "transferInProgress": false,
                                "transferOnHold": false,
                                "matured": false
                              },
                              "subStatus": {
                                "id": 0,
                                "code": "SavingsAccountSubStatusEnum.none",
                                "value": "None",
                                "none": true,
                                "inactive": false,
                                "dormant": false,
                                "escheat": false,
                                "block": false,
                                "blockCredit": false,
                                "blockDebit": false
                              },
                              "timeline": {
                                "submittedOnDate": [
                                  2023,
                                  6,
                                  13
                                ],
                                "submittedByUsername": "admin",
                                "submittedByFirstname": "App",
                                "submittedByLastname": "Administrator",
                                "approvedOnDate": [
                                  2023,
                                  6,
                                  13
                                ],
                                "approvedByUsername": "admin",
                                "approvedByFirstname": "App",
                                "approvedByLastname": "Administrator",
                                "activatedOnDate": [
                                  2023,
                                  6,
                                  13
                                ],
                                "activatedByUsername": "admin",
                                "activatedByFirstname": "App",
                                "activatedByLastname": "Administrator"
                              },
                              "currency": {
                                "code": "USD",
                                "name": "US Dollar",
                                "decimalPlaces": 2,
                                "inMultiplesOf": 0,
                                "displaySymbol": "$",
                                "nameCode": "currency.USD",
                                "displayLabel": "US Dollar ($)"
                              },
                              "nominalAnnualInterestRate": 0.5,
                              "interestCompoundingPeriodType": {
                                "id": 1,
                                "code": "savings.interest.period.savingsCompoundingInterestPeriodType.daily",
                                "value": "Daily"
                              },
                              "interestPostingPeriodType": {
                                "id": 4,
                                "code": "savings.interest.posting.period.savingsPostingInterestPeriodType.monthly",
                                "value": "Monthly"
                              },
                              "interestCalculationType": {
                                "id": 1,
                                "code": "savingsInterestCalculationType.dailybalance",
                                "value": "Daily Balance"
                              },
                              "interestCalculationDaysInYearType": {
                                "id": 365,
                                "code": "savingsInterestCalculationDaysInYearType.days365",
                                "value": "365 Days"
                              },
                              "lockinPeriodFrequency": 100,
                              "lockinPeriodFrequencyType": {
                                "id": 0,
                                "code": "savings.lockin.savingsPeriodFrequencyType.days",
                                "value": "Days"
                              },
                              "withdrawalFeeForTransfers": false,
                              "allowOverdraft": false,
                              "enforceMinRequiredBalance": false,
                              "onHoldFunds": 0,
                              "withHoldTax": false,
                              "lastActiveTransactionDate": [
                                2023,
                                6,
                                13
                              ],
                              "isDormancyTrackingActive": false,
                              "savingsAmountOnHold": 0,
                              "summary": {
                                "currency": {
                                  "code": "USD",
                                  "name": "US Dollar",
                                  "decimalPlaces": 2,
                                  "inMultiplesOf": 0,
                                  "displaySymbol": "$",
                                  "nameCode": "currency.USD",
                                  "displayLabel": "US Dollar ($)"
                                },
                                "totalDeposits": 10000,
                                "totalInterestEarned": 3.02,
                                "totalInterestPosted": 2.47,
                                "accountBalance": 10002.47,
                                "totalOverdraftInterestDerived": 0,
                                "interestNotPosted": 0.55,
                                "lastInterestCalculationDate": [
                                  2023,
                                  7,
                                  4
                                ],
                                "availableBalance": 10002.47
                              },
                              "isLinkedToFloatingInterestRates": false,
                              "interestRateDifferential": 0,
                              "overdraftInterestRateDifferential": 0,
                              "floatingRateId": 0,
                              "isBaseLendingRate": false,
                              "isFloatingInterestRateCalculationAllowed": false,
                              "bankDetails": {
                                "routingNumber": "100000001",
                                "name": "Bank Name",
                                "swiftCode": "XXXXXX",
                                "address": "Address Line 1",
                                "city": "City",
                                "postcode": "10001"
                              },
                              "skipCollectTransferCharge": false,
                              "cardRestricted": false
                            },
                            {
                              "id": 13,
                              "accountNo": "000000013",
                              "depositType": {
                                "id": 100,
                                "code": "depositAccountType.savingsDeposit",
                                "value": "Savings"
                              },
                              "clientId": 1,
                              "clientName": "Smith R",
                              "savingsProductId": 1,
                              "savingsProductName": "Current Account",
                              "fieldOfficerId": 0,
                              "status": {
                                "id": 100,
                                "code": "savingsAccountStatusType.submitted.and.pending.approval",
                                "value": "Submitted and pending approval",
                                "submittedAndPendingApproval": true,
                                "approved": false,
                                "rejected": false,
                                "withdrawnByApplicant": false,
                                "active": false,
                                "closed": false,
                                "prematureClosed": false,
                                "transferInProgress": false,
                                "transferOnHold": false,
                                "matured": false
                              },
                              "subStatus": {
                                "id": 0,
                                "code": "SavingsAccountSubStatusEnum.none",
                                "value": "None",
                                "none": true,
                                "inactive": false,
                                "dormant": false,
                                "escheat": false,
                                "block": false,
                                "blockCredit": false,
                                "blockDebit": false
                              },
                              "timeline": {
                                "submittedOnDate": [
                                  2022,
                                  8,
                                  16
                                ],
                                "submittedByUsername": "admin",
                                "submittedByFirstname": "App",
                                "submittedByLastname": "Administrator"
                              },
                              "currency": {
                                "code": "USD",
                                "name": "US Dollar",
                                "decimalPlaces": 2,
                                "inMultiplesOf": 0,
                                "displaySymbol": "$",
                                "nameCode": "currency.USD",
                                "displayLabel": "US Dollar ($)"
                              },
                              "nominalAnnualInterestRate": 0.5,
                              "interestCompoundingPeriodType": {
                                "id": 1,
                                "code": "savings.interest.period.savingsCompoundingInterestPeriodType.daily",
                                "value": "Daily"
                              },
                              "interestPostingPeriodType": {
                                "id": 4,
                                "code": "savings.interest.posting.period.savingsPostingInterestPeriodType.monthly",
                                "value": "Monthly"
                              },
                              "interestCalculationType": {
                                "id": 1,
                                "code": "savingsInterestCalculationType.dailybalance",
                                "value": "Daily Balance"
                              },
                              "interestCalculationDaysInYearType": {
                                "id": 365,
                                "code": "savingsInterestCalculationDaysInYearType.days365",
                                "value": "365 Days"
                              },
                              "lockinPeriodFrequency": 100,
                              "lockinPeriodFrequencyType": {
                                "id": 0,
                                "code": "savings.lockin.savingsPeriodFrequencyType.days",
                                "value": "Days"
                              },
                              "withdrawalFeeForTransfers": false,
                              "allowOverdraft": false,
                              "enforceMinRequiredBalance": false,
                              "onHoldFunds": 0,
                              "withHoldTax": false,
                              "isDormancyTrackingActive": false,
                              "savingsAmountOnHold": 0,
                              "summary": {
                                "currency": {
                                  "code": "USD",
                                  "name": "US Dollar",
                                  "decimalPlaces": 2,
                                  "inMultiplesOf": 0,
                                  "displaySymbol": "$",
                                  "nameCode": "currency.USD",
                                  "displayLabel": "US Dollar ($)"
                                },
                                "totalInterestPosted": 0,
                                "accountBalance": 0,
                                "totalOverdraftInterestDerived": 0,
                                "interestNotPosted": 0,
                                "availableBalance": 0
                              },
                              "isLinkedToFloatingInterestRates": false,
                              "interestRateDifferential": 0,
                              "overdraftInterestRateDifferential": 0,
                              "floatingRateId": 0,
                              "isBaseLendingRate": false,
                              "isFloatingInterestRateCalculationAllowed": false,
                              "bankDetails": {
                                "routingNumber": "100000001",
                                "name": "Bank Name",
                                "swiftCode": "XXXXXX",
                                "address": "Address Line 1",
                                "city": "City",
                                "postcode": "10001"
                              },
                              "skipCollectTransferCharge": false,
                              "cardRestricted": false
                            }
                          ]
                        }
                headers: {}
            '400':
              description: "The request fails if the tenant Id is missing or incorrect."
              content:
                application/json:
                  examples:
                    Result:
                      value: {
                            "timestamp": "2023-07-03T06:41:54.148+00:00",
                            "status": 400,
                            "error": "Bad Request",
                            "path": "/oauth/token"
                            }    
              headers: {}
      deprecated: false
      servers:
      - url: https://v1
        variables: {}
    parameters: []
  /savingsaccounts/{savingsAccountId}/transactions:
    get:
      tags:
      - Accounts
      summary: Get All Transactions
      description: "Use this API to get a list of all the transactions with their details. You need to specify the savings account Id."
      operationId: GetAllTransactions
      parameters:
      - name: content-type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      - name: tenantid
        in: header
        description: "The ID of your banking instance visible in the MBANQ Console. You need to pass this value as one of the following: \n(1) The 'tenantIdentifier' query parameter. \n(2) The 'tenantId' header parameter."
        required: true
        style: simple
        schema:
          type: string
      - name: savingsAccountId
        in: path
        description: 'The associated savings account Id.'
        required: true
        style: simple
        schema:
          type: string
      responses:
            '200':
              description: 'The list of all the transactions is retrieved successfully.'
              content:
                application/json:
                  examples:
                    Result:
                      value: 
                        {
                          "totalFilteredRecords": 0,
                          "pageItems": []
                        }
                headers: {}
            '400':
              description: "The request fails if the tenant Id is missing or incorrect."
              content:
                application/json:
                  examples:
                    Result:
                      value: {
                            "timestamp": "2023-07-03T06:41:54.148+00:00",
                            "status": 400,
                            "error": "Bad Request",
                            "path": "/oauth/token"
                            }    
              headers: {}
      deprecated: false
      servers:
      - url: https://v1
        variables: {}
    parameters: []
  /savingsaccounts/{savingsaccountId}/transactions/{transactionId}:
    get:
      tags:
      - Accounts
      summary: Get Transactions By Id
      description: "Use this API to retrieve details of transactions for a specific transaction id. You need to specify the transaction id."
      operationId: GetTransactionsById
      parameters:
      - name: content-type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      - name: tenantid
        in: header
        description: "The ID of your banking instance visible in the MBANQ Console. You need to pass this value as one of the following: \n(1) The 'tenantIdentifier' query parameter. \n(2) The 'tenantId' header parameter."
        required: true
        style: simple
        schema:
          type: string
      - name: transactionId
        in: path
        description: 'The associated Transaction Id.'
        required: true
        style: simple
        schema:
          type: string     
      - name: savingsaccountId
        in: path
        description: 'The associated savings account Id.'
        required: true
        style: simple
        schema:
          type: string
      responses:
            '200':
              description: 'The list of transactions retrieved successfully.'
              content:
                application/json:
                  examples:
                    Result:
                      value: 
                        {
                          "id": 19,
                          "transactionType": {
                            "id": 2,
                            "code": "savingsAccountTransactionType.withdrawal",
                            "value": "Withdrawal",
                            "deposit": false,
                            "dividendPayout": false,
                            "withdrawal": true,
                            "interestPosting": false,
                            "feeDeduction": false,
                            "initiateTransfer": false,
                            "approveTransfer": false,
                            "withdrawTransfer": false,
                            "rejectTransfer": false,
                            "overdraftInterest": false,
                            "writtenoff": false,
                            "overdraftFee": true,
                            "withholdTax": false,
                            "escheat": false,
                            "amountHold": false,
                            "amountRelease": false,
                            "interestpayableAccrued": false,
                            "overdraftInterestReceivableAccrued": false,
                            "isDebit": true,
                            "chargeBack": false,
                            "isFeeReversal": false
                          },
                          "accountId": 12,
                          "accountNo": "000000012",
                          "date": [
                            2023,
                            7,
                            4
                          ],
                          "dateTime": "2023-07-04 08:44:07",
                          "currency": {
                            "code": "USD",
                            "name": "US Dollar",
                            "decimalPlaces": 2,
                            "inMultiplesOf": 0,
                            "displaySymbol": "$",
                            "nameCode": "currency.USD",
                            "displayLabel": "US Dollar ($)"
                          },
                          "paymentDetailData": {
                            "id": 7,
                            "paymentType": {
                              "id": 1,
                              "name": "INTERNAL"
                            },
                            "reference": "Transfer to Rakesh Ranjan Behera",
                            "userInputReference": "internal tran"
                          },
                          "amount": 0.1,
                          "runningBalance": 10002.17,
                          "accrualRunningBalance": -0.3,
                          "interestPayableDerived": 0,
                          "reversed": false,
                          "submittedOnDate": [
                            2023,
                            7,
                            4
                          ],
                          "interestedPostedAsOn": false,
                          "submittedByUsername": "admin",
                          "media": {},
                          "bookingDate": [
                            2023,
                            7,
                            4
                          ],
                          "subTransactionType": "NONE",
                          "status": "PROCESSED",
                          "transferData": {
                            "id": 4,
                            "clientId": 12,
                            "amount": 0.1,
                            "currency": "USD",
                            "currencyData": {
                              "code": "USD",
                              "name": "US Dollar",
                              "decimalPlaces": 2,
                              "displaySymbol": "$",
                              "nameCode": "US Dollar"
                            },
                            "correlationId": "0fae0009-4feb-4981-a07a-4cb8ff6f89de",
                            "creditor": {
                              "name": "Rakesh Ranjan Behera",
                              "country": "US",
                              "accountType": "SAVINGS"
                            },
                            "debtor": {
                              "identifier": "id:12",
                              "name": "Alexa Smart",
                              "city": "Pearland",
                              "postalCode": "77581",
                              "country": "US",
                              "stateOrProvince": "TX",
                              "address": [
                                "150 Candlelight Drive",
                                "Pearland TX 77581 US"
                              ],
                              "accountType": "SAVINGS"
                            },
                            "createdAt": "2023-07-04 08:44:07",
                            "executedAt": "2023-07-04 08:44:08",
                            "externalId": "1688478247957GW",
                            "reference": [
                              "internal tran"
                            ],
                            "status": "EXECUTION_SUCCESS",
                            "transactionId": "0fae0009-4feb-4981-a07a-4cb8ff6f89de",
                            "type": "CREDIT",
                            "valueDate": "2023-07-04",
                            "paymentType": "INTERNAL",
                            "debtorAccountNumber": "000000012",
                            "debtorAccountId": 12,
                            "inOrOut": "OUT",
                            "statementDescription": "Transfer to Rakesh Ranjan Behera",
                            "isManualAllocation": false,
                            "stopFutureDebit": false
                          },
                          "isAlreadyChargeBack": false,
                          "initiatedAt": "2023-07-04 08:44:07",
                          "transactionReferenceId": "8cccc848-98ca-4b91-afd6-e955731ad315"
                        }
                headers: {}
            '400':
              description: "The request fails if the transaction id is incorrect."
              content:
                application/json:
                  examples:
                    Result:
                      value: {
                        "developerMessage": "The requested resource is not available.",
                        "httpStatusCode": "404",
                        "defaultUserMessage": "The requested resource is not available.",
                        "userMessageGlobalisationCode": "error.msg.resource.not.found",
                        "errors": [
                          {
                            "developerMessage": "Resource [savings account transaction] with identifier [1] does not exist",
                            "defaultUserMessage": "Resource [savings account transaction] with identifier [1] does not exist",
                            "userMessageGlobalisationCode": "error.msg.resource.savingsaccounttransaction.not.found",
                            "parameterName": "id",
                            "value": null,
                            "args": [
                              {
                                "value": 1
                              }
                            ]
                          }
                        ]
                      }
              headers: {}
      deprecated: false
      servers:
      - url: https://v1
        variables: {}
    parameters: []
  /savingsaccounts/{accountId}:
    get:
      tags:
      - Accounts
      summary: Get Accounts By Id
      description: "Use this API to retrieve the accounts based on the Id. You need to specify the account id."
      operationId: GetAccountsById
      parameters:
      - name: content-type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      - name: tenantid
        in: header
        description: "The ID of your banking instance visible in the MBANQ Console. You need to pass this value as one of the following: \n(1) The 'tenantIdentifier' query parameter. \n(2) The 'tenantId' header parameter."
        required: true
        style: simple
        schema:
          type: string
      - name: accountId
        in: path
        description: 'The associated account Id.'
        required: true
        style: simple
        schema:
          type: string
      responses:
            '200':
              description: 'The accounts details retrieved successfully.'
              content:
                application/json:
                  examples:
                    Result:
                      value: 
                        {
                          "id": 12,
                          "accountNo": "000000012",
                          "depositType": {
                            "id": 100,
                            "code": "depositAccountType.savingsDeposit",
                            "value": "Savings"
                          },
                          "clientId": 12,
                          "clientName": "Alexa Smart",
                          "savingsProductId": 1,
                          "savingsProductName": "Current Account",
                          "fieldOfficerId": 0,
                          "status": {
                            "id": 300,
                            "code": "savingsAccountStatusType.active",
                            "value": "Active",
                            "submittedAndPendingApproval": false,
                            "approved": false,
                            "rejected": false,
                            "withdrawnByApplicant": false,
                            "active": true,
                            "closed": false,
                            "prematureClosed": false,
                            "transferInProgress": false,
                            "transferOnHold": false,
                            "matured": false
                          },
                          "subStatus": {
                            "id": 0,
                            "code": "SavingsAccountSubStatusEnum.none",
                            "value": "None",
                            "none": true,
                            "inactive": false,
                            "dormant": false,
                            "escheat": false,
                            "block": false,
                            "blockCredit": false,
                            "blockDebit": false
                          },
                          "timeline": {
                            "submittedOnDate": [
                              2023,
                              6,
                              13
                            ],
                            "submittedByUsername": "admin",
                            "submittedByFirstname": "App",
                            "submittedByLastname": "Administrator",
                            "approvedOnDate": [
                              2023,
                              6,
                              13
                            ],
                            "approvedByUsername": "admin",
                            "approvedByFirstname": "App",
                            "approvedByLastname": "Administrator",
                            "activatedOnDate": [
                              2023,
                              6,
                              13
                            ],
                            "activatedByUsername": "admin",
                            "activatedByFirstname": "App",
                            "activatedByLastname": "Administrator"
                          },
                          "currency": {
                            "code": "USD",
                            "name": "US Dollar",
                            "decimalPlaces": 2,
                            "inMultiplesOf": 0,
                            "displaySymbol": "$",
                            "nameCode": "currency.USD",
                            "displayLabel": "US Dollar ($)"
                          },
                          "nominalAnnualInterestRate": 0.5,
                          "interestCompoundingPeriodType": {
                            "id": 1,
                            "code": "savings.interest.period.savingsCompoundingInterestPeriodType.daily",
                            "value": "Daily"
                          },
                          "interestPostingPeriodType": {
                            "id": 4,
                            "code": "savings.interest.posting.period.savingsPostingInterestPeriodType.monthly",
                            "value": "Monthly"
                          },
                          "interestCalculationType": {
                            "id": 1,
                            "code": "savingsInterestCalculationType.dailybalance",
                            "value": "Daily Balance"
                          },
                          "interestCalculationDaysInYearType": {
                            "id": 365,
                            "code": "savingsInterestCalculationDaysInYearType.days365",
                            "value": "365 Days"
                          },
                          "lockinPeriodFrequency": 100,
                          "lockinPeriodFrequencyType": {
                            "id": 0,
                            "code": "savings.lockin.savingsPeriodFrequencyType.days",
                            "value": "Days"
                          },
                          "withdrawalFeeForTransfers": false,
                          "allowOverdraft": false,
                          "enforceMinRequiredBalance": false,
                          "onHoldFunds": 0,
                          "withHoldTax": false,
                          "lastActiveTransactionDate": [
                            2023,
                            6,
                            13
                          ],
                          "isDormancyTrackingActive": false,
                          "savingsAmountOnHold": 0,
                          "summary": {
                            "currency": {
                              "code": "USD",
                              "name": "US Dollar",
                              "decimalPlaces": 2,
                              "inMultiplesOf": 0,
                              "displaySymbol": "$",
                              "nameCode": "currency.USD",
                              "displayLabel": "US Dollar ($)"
                            },
                            "totalDeposits": 10000,
                            "totalInterestEarned": 3.02,
                            "totalInterestPosted": 2.47,
                            "accountBalance": 10002.47,
                            "totalOverdraftInterestDerived": 0,
                            "interestNotPosted": 0.55,
                            "lastInterestCalculationDate": [
                              2023,
                              7,
                              4
                            ],
                            "availableBalance": 10002.47
                          },
                          "isLinkedToFloatingInterestRates": false,
                          "interestRateDifferential": 0,
                          "overdraftInterestRateDifferential": 0,
                          "floatingRateId": 0,
                          "isBaseLendingRate": false,
                          "isFloatingInterestRateCalculationAllowed": false,
                          "bankDetails": {
                            "routingNumber": "100000001",
                            "name": "Bank Name",
                            "swiftCode": "XXXXXX",
                            "address": "Address Line 1",
                            "city": "City",
                            "postcode": "10001"
                          },
                          "skipCollectTransferCharge": false,
                          "cardRestricted": false
                        }
                headers: {}
            '400':
              description: "The request fails if the savings account does not exist."
              content:
                application/json:
                  examples:
                    Result:
                      value: {
                        "developerMessage": "The requested resource is not available.",
                        "httpStatusCode": "404",
                        "defaultUserMessage": "The requested resource is not available.",
                        "userMessageGlobalisationCode": "error.msg.resource.not.found",
                        "errors": [
                          {
                            "developerMessage": "Savings account with identifier 111 does not exist",
                            "defaultUserMessage": "Savings account with identifier 111 does not exist",
                            "userMessageGlobalisationCode": "error.msg.saving.account.id.invalid",
                            "parameterName": "id",
                            "value": null,
                            "args": [
                              {
                                "value": 111
                              }
                            ]
                          }
                        ]
                      }
              headers: {}
      deprecated: false
      servers:
      - url: https://v1
        variables: {}
    parameters: []
  /savingsaccounts/{savingsAccountId}:
    post:
      tags:
      - Accounts
      summary: Block Account
      description: "Use this API to block an account. You need to specify the savings account Id"
      operationId: BlockAccount
      parameters:
      - name: command
        in: query
        description: "In this case the command value should always be 'block'. "
        required: true
        style: form
        explode: true
        schema:
          type: string
          examples:
          - block
      - name: tenantid
        in: header
        description: "The ID of your banking instance visible in the MBANQ Console. You need to pass this value as one of the following: \n(1) The 'tenantIdentifier' query parameter. \n(2) The 'tenantId' header parameter."
        required: true
        style: simple
        schema:
          type: string
      - name: savingsAccountId
        in: path
        description: 'The associated savings account Id.'
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/BlockAccountRequest'
              - examples:
                - reason: block reason
              contentMediaType: application/json
            example:
              reason: block reason
        required: true
      responses:
          '200':
            description: 'The account is successfully blocked.'
            content:
              application/json:
                examples:
                  Result:
                    value: 
                      {
                        "officeId": 1,
                        "clientId": 22,
                        "savingsId": 17,
                        "resourceId": 17,
                        "changes": {
                          "subStatus": {
                            "id": 400,
                            "code": "SavingsAccountSubStatusEnum.block",
                            "value": "Block",
                            "none": false,
                            "inactive": false,
                            "dormant": false,
                            "escheat": false,
                            "block": true,
                            "blockCredit": false,
                            "blockDebit": false
                          }
                        }
                      }
              headers: {}
          '400':
            description: "The request fails if the savings account id is incorrect."
            content:
              application/json:
                examples:
                  Result:
                    value: {
                      "developerMessage": "The requested resource is not available.",
                      "httpStatusCode": "404",
                      "defaultUserMessage": "The requested resource is not available.",
                      "userMessageGlobalisationCode": "error.msg.resource.not.found",
                      "errors": [
                        {
                          "developerMessage": "Savings account with identifier 1234545645667 does not exist",
                          "defaultUserMessage": "Savings account with identifier 1234545645667 does not exist",
                          "userMessageGlobalisationCode": "error.msg.saving.account.id.invalid",
                          "parameterName": "id",
                          "value": null,
                          "args": [
                            {
                              "value": 1234545645667
                            }
                          ]
                        }
                      ]
                    }
            headers: {}
      deprecated: false
      servers:
      - url: https://v1
        variables: {}
    parameters: []
  /:
    post:
      tags:
      - Card Issuing
      summary: Create & Activate Card
      description: >-
        Use this API to Create and Activate a Card. 
        The account id generated during the account creation should be used to create the product(card). The product id is already configured and takes the default value.
        

        **Note:** The card will be ‘active’ by default.
        
      operationId: Create&ActivateCard
      parameters:
      - name: content-type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      - name: tenantid
        in: header
        description: "The ID of your banking instance visible in the MBANQ Console. You need to pass this value as one of the following: \n(1) The 'tenantIdentifier' query parameter. \n(2) The 'tenantId' header parameter."
        required: true
        style: simple
        schema:
          type: string
      requestBody:
            description: ''
            content:
              application/json:
                schema:
                  allOf:
                  - $ref: '#/components/schemas/CreateActivateCardRESTRequest'
                  - examples:
                    - savingsAccountId: 18
                      productId: 1
                  contentMediaType: application/json
                example:
                  savingsAccountId: 18
                  productId: 1
            required: true
      responses:
            '200':
              description: 'The card is created and activated successfully.'
              content:
                application/json:
                  examples:
                    Result:
                      value: 
                        {
                          "resourceId": 42
                        } 
                headers: {}
            '404':
              description: "The request fails if the savings account is not found."
              content:
                application/json:
                  examples:
                    Result:
                      value: {
                        "developerMessage": "The requested resource is not available.",
                        "httpStatusCode": "404",
                        "defaultUserMessage": "The requested resource is not available.",
                        "userMessageGlobalisationCode": "error.msg.resource.not.found",
                        "errors": [
                          {
                            "developerMessage": "Resource [savings account] with identifier [18] does not exist",
                            "defaultUserMessage": "Resource [savings account] with identifier [18] does not exist",
                            "userMessageGlobalisationCode": "error.msg.resource.savingsaccount.not.found",
                            "parameterName": "id",
                            "value": null,
                            "args": [
                              {
                                "value": 18
                              }
                            ]
                          }
                        ]
                      }
              headers: {}
      deprecated: false
      servers:
      - url: https://graphql
        variables: {}
    parameters: []
  /cards/{cardId}:
    post:
      tags:
      - Card Issuing
      summary: Renew Card
      description: "Use this API to renew a card. You need to specify the card Id.\n\n**Support command**\n\n1. RENEW : Re-order card with the same card number.\n2. REPLACE : Order new card with information and card number.\n3. SUSPEND : Suspend card is block opeartion on card in temporary\n4. ACTIVATE : Activate to be use.\n5. CHANGE_TYPE : Change card from virtual to physical card.\n6. TERMINATE : Close card or Block card permanent\n    \n\n- Example Requests \n\n`POST https://api.cloud.mbanq.com/v1/cards/2?command=RENEW`"
      operationId: RenewCard
      parameters:
      - name: command
        in: query
        description: "In this case the command is always 'RENEW'."
        required: true
        style: form
        explode: true
        schema:
          type: string
          examples:
          - RENEW
      - name: tenantid
        in: header
        description: "The ID of your banking instance visible in the MBANQ Console. You need to pass this value as one of the following: \n(1) The 'tenantIdentifier' query parameter. \n(2) The 'tenantId' header parameter."
        required: true
        style: simple
        schema:
          type: string
      - name: cardId
        in: path
        description: 'The associated card Id.'
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RenewCardRequest'
              - examples:
                - productId: 1
              contentMediaType: application/json
            example:
              productId: 1
        required: true
      responses:
          '200':
            description: 'The card is renewed successfully.'
            content:
              application/json:
                examples:
                  Result:
                    value: 
                      {
                        "clientId": 12,
                        "resourceId": 4
                      }
              headers: {}
          '400':
            description: "The request fails if the card Id is incorrect."
            content:
              application/json:
                examples:
                  Result:
                    value: {
                      "developerMessage": "The requested resource is not available.",
                      "httpStatusCode": "404",
                      "defaultUserMessage": "The requested resource is not available.",
                      "userMessageGlobalisationCode": "error.msg.resource.not.found",
                      "errors": [
                        {
                          "developerMessage": "Resource [card] with identifier [123] does not exist",
                          "defaultUserMessage": "Resource [card] with identifier [123] does not exist",
                          "userMessageGlobalisationCode": "error.msg.resource.card.not.found",
                          "parameterName": "id",
                          "value": null,
                          "args": [
                            {
                              "value": 123
                            }
                          ]
                        }
                      ]
                    } 
            headers: {}
      deprecated: false
      servers:
      - url: https://v1
        variables: {}
    put:
      tags:
      - Card Issuing
      summary: Toggle Card Features
      description: "Use this API to Toggle Card Features. You need to specify the card Id."
      operationId: ToggleCardFeatures
      parameters:
      - name: tenantid
        in: header
        description: "The ID of your banking instance visible in the MBANQ Console. You need to pass this value as one of the following: \n(1) The 'tenantIdentifier' query parameter. \n(2) The 'tenantId' header parameter."
        required: true
        style: simple
        schema:
          type: string
      - name: cardId
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ToggleCardFeaturesRequest'
              - examples:
                - posPaymentEnabled: true
                  onlinePaymentEnabled: true
                  contactlessPaymentEnabled: true
              contentMediaType: application/json
            example:
              posPaymentEnabled: true
              onlinePaymentEnabled: true
              contactlessPaymentEnabled: true
        required: true
      responses:
          '200':
            description: 'The card feature is toggled successfully.'
            content:
              application/json:
                examples:
                  Result:
                    value: 
                      {
                        "resourceId": 3
                      }

              headers: {}
          '403':
            description: "The request fails if the card Id is incorrect."
            content:
              application/json:
                examples:
                  Result:
                    value: {
                      "developerMessage": "Request was understood but caused a domain rule violation.",
                      "httpStatusCode": "403",
                      "defaultUserMessage": "Errors contain reason for domain rule violation.",
                      "userMessageGlobalisationCode": "validation.msg.domain.rule.violation",
                      "errors": [
                        {
                          "developerMessage": "Physical card is not activated yet",
                          "defaultUserMessage": "Physical card is not activated yet",
                          "userMessageGlobalisationCode": "card.status.invalid",
                          "parameterName": "id",
                          "value": null,
                          "args": []
                        }
                      ]
                    } 
            headers: {}
      deprecated: false
      servers:
      - url: https://v1
        variables: {}
    parameters: []
  /clients/{clientId}/cards:
    get:
      tags:
      - Card Issuing
      summary: List Cards
      description: "Use this API to retrieve the list of cards for a specific client. You need to specify the client Id."
      operationId: ListCards
      parameters:
      - name: content-type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          const: application/json
          type: string
          examples:
          - application/json
      - name: tenantid
        in: header
        description: "The ID of your banking instance visible in the MBANQ Console. You need to pass this value as one of the following: \n(1) The 'tenantIdentifier' query parameter. \n(2) The 'tenantId' header parameter."
        required: true
        style: simple
        schema:
          type: string
      - name: clientId
        in: path
        description: 'The associated client Id.'
        required: true
        style: simple
        schema:
          type: string
      responses:
            '200':
              description: 'The list of cards for the client retrieved successfully.'
              content:
                application/json:
                  examples:
                    Result:
                      value: 
                        [
                          {
                            "id": 3,
                            "accountId": 12,
                            "productId": 4,
                            "virtual": false,
                            "productName": "testDebit2",
                            "network": "MASTERCARD",
                            "cardType": "DEBIT",
                            "digitalFirst": false,
                            "cardProcessorName": "galileo",
                            "token": "566e05a9-431d-462e-8692-67ff011f9dc5",
                            "embossedNames": [
                              "Alexa Smart"
                            ],
                            "primaryAccountNumber": "************3456",
                            "expiresOn": [
                              2028,
                              6,
                              30
                            ],
                            "status": "ACTIVE",
                            "fulfillmentStatus": "ORDERED",
                            "onlinePaymentEnabled": false,
                            "posPaymentEnabled": false,
                            "physicalCardActivated": false,
                            "contactlessPaymentEnabled": false,
                            "atmWithdrawalsEnabled": false,
                            "internationalPaymentsEnabled": false,
                            "velocityRules": [],
                            "registeredOn": [
                              2023,
                              6,
                              27
                            ],
                            "activatedAt": {
                              "date": [
                                2023,
                                6,
                                28
                              ],
                              "time": {
                                "hour": 4,
                                "minute": 57,
                                "second": 30,
                                "nano": 612908000
                              }
                            },
                            "updatedStatusBy": {
                              "id": 1,
                              "username": "admin",
                              "officeId": 1,
                              "officeName": "Head Office",
                              "firstname": "App",
                              "lastname": "Administrator",
                              "email": "documents@gwocu.com",
                              "isEmailVerified": true,
                              "isSelfServiceUser": false
                            },
                            "updatedStatusAt": "2023-06-28T04:57:30.610685",
                            "bid": 12345,
                            "replacedDamageCount": 0,
                            "user": {
                              "id": 12,
                              "username": "alexa",
                              "officeId": 1,
                              "officeName": "Head Office",
                              "firstname": "Alexa",
                              "lastname": "Smart",
                              "email": "documents@gwocu.com",
                              "isEmailVerified": true,
                              "isSelfServiceUser": true
                            }
                          },
                          {
                            "id": 1,
                            "accountId": 12,
                            "productId": 3,
                            "virtual": false,
                            "productName": "TestDebit1",
                            "network": "MASTERCARD",
                            "cardType": "DEBIT",
                            "digitalFirst": false,
                            "cardProcessorName": "galileo",
                            "token": "6a323157-2062-4f5c-86a1-6657b119f24a",
                            "embossedNames": [
                              "Alexa Smart"
                            ],
                            "primaryAccountNumber": "************3456",
                            "expiresOn": [
                              2028,
                              6,
                              30
                            ],
                            "status": "ACTIVE",
                            "fulfillmentStatus": "ORDERED",
                            "onlinePaymentEnabled": false,
                            "posPaymentEnabled": false,
                            "physicalCardActivated": false,
                            "contactlessPaymentEnabled": false,
                            "atmWithdrawalsEnabled": false,
                            "internationalPaymentsEnabled": false,
                            "velocityRules": [],
                            "registeredOn": [
                              2023,
                              6,
                              27
                            ],
                            "activatedAt": {
                              "date": [
                                2023,
                                6,
                                27
                              ],
                              "time": {
                                "hour": 23,
                                "minute": 25,
                                "second": 32,
                                "nano": 200364000
                              }
                            },
                            "updatedStatusBy": {
                              "id": 1,
                              "username": "admin",
                              "officeId": 1,
                              "officeName": "Head Office",
                              "firstname": "App",
                              "lastname": "Administrator",
                              "email": "documents@gwocu.com",
                              "isEmailVerified": true,
                              "isSelfServiceUser": false
                            },
                            "updatedStatusAt": "2023-06-27T23:25:32.198392",
                            "bid": 12345,
                            "replacedDamageCount": 0,
                            "user": {
                              "id": 12,
                              "username": "alexa",
                              "officeId": 1,
                              "officeName": "Head Office",
                              "firstname": "Alexa",
                              "lastname": "Smart",
                              "email": "documents@gwocu.com",
                              "isEmailVerified": true,
                              "isSelfServiceUser": true
                            }
                          }
                        ]
                headers: {}
            '400':
              description: "The request fails if the tenant Id is missing or incorrect."
              content:
                application/json:
                  examples:
                    Result:
                      value: {
                            "timestamp": "2023-07-03T06:41:54.148+00:00",
                            "status": 400,
                            "error": "Bad Request",
                            "path": "/oauth/token"
                            }    
              headers: {}
      deprecated: false
      servers:
      - url: https://v1
        variables: {}
    parameters: []
  /transfers:
    post:
      tags:
      - Transfers
      summary: Create Internal Transfer
      description: "Use this API for Internal Transfer of funds.You need to specify the debtor and the creditor."
      operationId: CreateInternalTransfer
      parameters:
      - name: tenantid
        in: header
        description: "The ID of your banking instance visible in the MBANQ Console. You need to pass this value as one of the following: \n(1) The 'tenantIdentifier' query parameter. \n(2) The 'tenantId' header parameter."
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateInternalTransferRequest'
              - examples:
                - type: CREDIT
                  paymentType: INTERNAL
                  amount: '0.1'
                  debtor:
                    identifier: id:{{savingsAccountId}}
                    accountType: SAVINGS
                  creditor:
                    identifier: id:11
                    name: Rakesh Ranjan Behera
                    accountType: SAVINGS
                  reference:
                  - internal tran
              contentMediaType: application/json
            example:
              type: CREDIT
              paymentType: INTERNAL
              amount: '0.1'
              debtor:
                identifier: id:{{savingsAccountId}}
                accountType: SAVINGS
              creditor:
                identifier: id:11
                name: Rakesh Ranjan Behera
                accountType: SAVINGS
              reference:
              - internal tran
        required: true
      responses:
          '200':
            description: 'Amount Transfered Successfully.'
            content:
              application/json:
                examples:
                  Result:
                    value: 
                      {
                        "clientId": 12,
                        "savingsId": 12,
                        "resourceId": 2,
                        "resourceIdentifier": "1688478192520L2"
                      }
              headers: {}
          '400':
            description: "The request fails if the required parameters are not given.E.g. creditor parameter is not given."
            content:
              application/json:
                examples:
                  Result:
                    value: {
                      "developerMessage": "The request was invalid. This typically will happen due to validation errors which are provided.",
                      "httpStatusCode": "400",
                      "defaultUserMessage": "Validation errors exist.",
                      "userMessageGlobalisationCode": "validation.msg.validation.errors.exist",
                      "errors": [
                        {
                          "developerMessage": "The creditor field cannot be null.",
                          "defaultUserMessage": "The creditor field cannot be null.",
                          "userMessageGlobalisationCode": "error.msg.creditor.parameter.invalid",
                          "parameterName": "creditor",
                          "value": null,
                          "args": []
                        }
                      ]
                    }
            headers: {}
      deprecated: false
      servers:
      - url: https://v1
        variables: {}
    parameters: []
  /savingsaccounts/{savingsAccountId1}:
    post:
      tags:
      - Misc
      summary: Approve Account
      description: >-
        Use this API to approve an account. The account can be approved only if it is in 'Submitted and pending approval' state. You need to specify the savings Id.


        Example requests:

        
         `POST savingsaccounts/1?command=approve`
      operationId: ApproveAccount
      parameters:
      - name: command
        in: query
        description: "In this case the command value should always be 'approve'. "
        required: true
        style: form
        explode: true
        schema:
          type: string
          examples:
          - approve
      - name: tenantid
        in: header
        description: "The ID of your banking instance visible in the MBANQ Console. You need to pass this value as one of the following: \n(1) The 'tenantIdentifier' query parameter. \n(2) The 'tenantId' header parameter."
        required: true
        style: simple
        schema:
          type: string
      - name: savingsAccountId1
        in: path
        description: 'The associated savings account Id.'
        required: true
        style: simple
        schema:
          type: string             
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ApproveAccountRequest'
              - examples:
                - locale: en
                  dateFormat: dd MMMM yyyy
                  approvedOnDate: 22 June 2023
              contentMediaType: application/json
            example:
              locale: en
              dateFormat: dd MMMM yyyy
              approvedOnDate: 22 June 2023
        required: true
      responses:
          '200':
            description: 'The account is approved successfully.'
            content:
              application/json:
                examples:
                  Result:
                    value: 
                      {
                        "officeId": 1,
                        "clientId": 1,
                        "savingsId": 13,
                        "resourceId": 13,
                        "changes": {
                          "status": "APPROVED",
                          "locale": "en",
                          "dateFormat": "dd MMMM yyyy",
                          "approvedOnDate": "22 June 2023"
                        }
                      }
              headers: {}
          '400':
            description: "The request fails if the account is not in Submitted and pending approval state."
            content:
              application/json:
                examples:
                  Result:
                    value: {
                      "developerMessage": "The request was invalid. This typically will happen due to validation errors which are provided.",
                      "httpStatusCode": "400",
                      "defaultUserMessage": "Validation errors exist.",
                      "userMessageGlobalisationCode": "validation.msg.validation.errors.exist",
                      "errors": [
                        {
                          "developerMessage": "Failed data validation due to: not.in.submittedandpendingapproval.state.",
                          "defaultUserMessage": "Failed data validation due to: not.in.submittedandpendingapproval.state.",
                          "userMessageGlobalisationCode": "validation.msg.savingsaccount.approval.not.in.submittedandpendingapproval.state",
                          "parameterName": "approvedOnDate",
                          "value": null,
                          "args": [
                            {
                              "value": null
                            },
                            {
                              "value": []
                            }
                          ]
                        }
                      ]
                    }
            headers: {}
      deprecated: false
      servers:
      - url: https://v1
        variables: {}
    parameters: []
  /cards:
    post:
      tags:
      - Misc
      summary: Create & Activate Card
      description: >-
        Use this API to create & activate a card. The account id generated during the account creation should be used to create the product. The product id is already configured and should be remained default.


        By default, the card will be 'active'.
      operationId: Create&ActivateCardREST
      parameters:
      - name: tenantid
        in: header
        description: "The ID of your banking instance visible in the MBANQ Console. You need to pass this value as one of the following: \n(1) The 'tenantIdentifier' query parameter. \n(2) The 'tenantId' header parameter."
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateActivateCardRESTRequest'
              - examples:
                - savingsAccountId: 18
                  productId: 1
              contentMediaType: application/json
            example:
              savingsAccountId: 18
              productId: 1
        required: true
      responses:
          '200':
            description: 'The card is created and activated successfully.'
            content:
              application/json:
                examples:
                  Result:
                    value: 
                      {
                        "savingsAccountId": 11,
                        "productId": 1
                      }
              headers: {}
          '404':
            description: "The request fails if the savings account is not found."
            content:
              application/json:
                examples:
                  Result:
                    value: {
                      "developerMessage": "The requested resource is not available.",
                      "httpStatusCode": "404",
                      "defaultUserMessage": "The requested resource is not available.",
                      "userMessageGlobalisationCode": "error.msg.resource.not.found",
                      "errors": [
                        {
                          "developerMessage": "Resource [savings account] with identifier [55] does not exist",
                          "defaultUserMessage": "Resource [savings account] with identifier [55] does not exist",
                          "userMessageGlobalisationCode": "error.msg.resource.savingsaccount.not.found",
                          "parameterName": "id",
                          "value": null,
                          "args": [
                            {
                              "value": 55
                            }
                          ]
                        }
                      ]
                    }
            headers: {}
      deprecated: false
      servers:
      - url: https://v1
        variables: {}
    parameters: []
components:
  schemas:
    CreateActivateClientRequest:
      title: CreateActivateClientRequest
      required:
      - activationDate
      - active
      - dateFormat
      - familyMembers
      - firstname
      - genderId
      - lastname
      - locale
      - officeId
      - savingsProductId
      - submittedOnDate
      - mobileNo
      - emailAddress
      type: object
      properties:
        activationDate:
          type: string
          description : The Date of Activation. If 'active' is set to true then you need to enter this value.
        active:
          type: boolean
          description : To indicate if the client is active or not. If set to true , you need to enter the 'activationDate'.
        dateFormat:
          type: string
          description : The date format for the activation date.
        familyMembers:
          type: array
          items:
            type: string
          description: ''
        firstname:
          type: string
          description :  The first name of the client.
        genderId:
          type: integer
          contentEncoding: int32
          description :  The gender Id of the client.
        lastname:
          type: string
          description :  The last name of the client.
        locale:
          type: string
          description :  The locale of the client.
        officeId:
          type: integer
          contentEncoding: int32
          description :  The associated office Id.
        savingsProductId:
          type:
          - string
          - 'null'
          description :  The associated savings product Id.
        submittedOnDate:
          type: string
          description : The date of submission.
        mobileNo:
          type: string
          description :  The mobile id of the client.
        emailAddress:
          type: string
          description :  The email address of the client.
      examples:
      - activationDate: 13 June 2023
        active: false
        dateFormat: dd MMMM yyyy
        familyMembers: []
        firstname: Test
        genderId: 634
        lastname: Instance
        locale: en
        officeId: 1
        savingsProductId: null
        submittedOnDate: 13 June 2023
        mobileNo: '12345678998'
        emailAddress: abc@testgmail.com
    UpdateclientRequest:
      title: UpdateclientRequest
      required:
      - externalId
      type: object
      properties:
        externalId:
          type: string
          description: "When the client exists in an external system, this is the ID used in that System associated with this client.\nIf provided, it must be unique."
      examples:
      - externalId: 786444UUUYYH7
    AddAddressRequest:
      title: AddAddressRequest
      required:
      - addressLine1
      - addressLine2
      - addressLine3
      - city
      - stateProvinceId
      - countryId
      - postalCode
      - isActive
      type: object
      properties:
        addressLine1:
          type: string
          description: "Address Line 1 for the client."
        addressLine2:
          type: string
          description: "Address Line 2 for the client."
        addressLine3:
          type: string
          description: "Address Line 3 for the client."
        city:
          type: string
          description: "The client's city."
        stateProvinceId:
          type: integer
          contentEncoding: int32
          description: "The client's state Province Id."
        countryId:
          type: integer
          contentEncoding: int32
          description: "The client's state country Id."
        postalCode:
          type: string
          description: "The client's postal code."
        isActive:
          type: boolean
          description: "To indicate if the client's address is active  or not."
      examples:
      - addressLine1: Kandivali
        addressLine2: plot47
        addressLine3: charkop
        city: Mumbai
        stateProvinceId: 546
        countryId: 284
        postalCode: '40004'
        isActive: true
    CreateClientidentifierRequest:
      title: CreateClientidentifierRequest
      required:
      - documentTypeId
      - documentKey
      - status
      - description
      - issuedBy
      type: object
      properties:
        documentTypeId:
          type: string
          description: "Type of the identification document. E.g. License, Passport."
        documentKey:
          type: string
          description: "A number/string that uniquely identifies a particular document. E.g. A Driver's License number for a driving license."
        status:
          type: string
          description: "The status of Client Identifier. E.g. active"
        description:
          type: string
          description: "Any user comments to be associated with the Client Identifier."
        issuedBy:
          type: string
          description: "The entity that issued the client identifier."
      examples:
      - documentTypeId: '647'
        documentKey: '1234567'
        status: Active
        description: Document has been verified
        issuedBy: DMV
    CloseClientRequest:
      title: CloseClientRequest
      required:
      - dateFormat
      - locale
      - closureDate
      - closureReasonId
      type: object
      properties:
        dateFormat:
          type: string
          description: "The associated date format."
        locale:
          type: string
          description: "The client's locale."
        closureDate:
          type: string
          description: "The client's closure date."
        closureReasonId:
          type: string
          description: "The closure reason id."
      examples:
      - dateFormat: dd MMMM yyyy
        locale: en
        closureDate: 25 June 2023
        closureReasonId: '23'
    ActivateClientRequest:
      title: ActivateClientRequest
      required:
      - locale
      - dateFormat
      - activationDate
      type: object
      properties:
        locale:
          type: string
          description : "The client's locale."
        dateFormat:
          type: string
          description: "The date format for the activation date."
        activationDate:
          description: "The activation date for the client."
          type: string
      examples:
      - locale: en
        dateFormat: dd MMMM yyyy
        activationDate: 13 June 2023
    BlockAccountRequest:
      title: BlockAccountRequest
      required:
      - reason
      type: object
      properties:
        reason:
          type: string
          description: "The reason for blocking the account."
      examples:
      - reason: block reason
    CloseAccountRequest:
      title: CloseAccountRequest
      required:
      - dateFormat
      - locale
      - closedOnDate
      - note
      - withdrawBalance
      - paymentTypeId
      type: object
      properties:
        dateFormat:
          type: string
        locale:
          type: string
        closedOnDate:
          type: string
        note:
          type: string
        withdrawBalance:
          type: boolean
        paymentTypeId:
          type: string
      examples:
      - dateFormat: dd MMMM yyyy
        locale: en
        closedOnDate: 20 June 2023
        note: close note
        withdrawBalance: true
        paymentTypeId: '14'
    RenewCardRequest:
      title: RenewCardRequest
      required:
      - productId
      type: object
      properties:
        productId:
          type: integer
          description: "The associated product Id."
          contentEncoding: int32
      examples:
      - productId: 1
    ReplaceCardRequest:
      title: ReplaceCardRequest
      required:
      - productId
      type: object
      properties:
        productId:
          type: integer
          description: "The associated product Id."
          contentEncoding: int32
      examples:
      - productId: 1
    SuspendCardRequest:
      title: SuspendCardRequest
      required:
      - productId
      type: object
      properties:
        productId:
          type: integer
          contentEncoding: int32
      examples:
      - productId: 1
    TerminateCardRequest:
      title: TerminateCardRequest
      required:
      - productId
      type: object
      properties:
        productId:
          type: integer
          contentEncoding: int32
      examples:
      - productId: 10
    ToggleCardFeaturesRequest:
      title: ToggleCardFeaturesRequest
      required:
      - posPaymentEnabled
      - onlinePaymentEnabled
      - contactlessPaymentEnabled
      type: object
      properties:
        posPaymentEnabled:
          type: boolean
          description: "To enable or disable point of sales payment."
        onlinePaymentEnabled:
          type: boolean
          description: "To enable or disable online payment."
        contactlessPaymentEnabled:
          type: boolean
          description: "To enable or disable contactless payment."
      examples:
      - posPaymentEnabled: true
        onlinePaymentEnabled: true
        contactlessPaymentEnabled: true
    CreateInternalTransferRequest:
      title: CreateInternalTransferRequest
      required:
      - type
      - paymentType
      - amount
      - debtor
      - creditor
      - reference
      type: object
      properties:
        type:
          type: string
          description: "The type of tranfer."
        paymentType:
          type: string
          description: "The payment type."
        amount:
          type: string
          description: "The amount to be transfered."
        debtor:
          description: "The debtor for the internal transfer."
          $ref: '#/components/schemas/Debtor'
        creditor:
          description: "The creditor for the internal transfer."
          $ref: '#/components/schemas/Creditor'
        reference:
          type: array
          items:
            type: string
          description: "The reference for the transfer."
      examples:
      - type: CREDIT
        paymentType: INTERNAL
        amount: '0.1'
        debtor:
          identifier: id:{{savingsAccountId}}
          accountType: SAVINGS
          description: "The debtor. Here you need to enter the Savings account Id, Example- id:{{12}}"
        creditor:
          identifier: id:11
          name: Rakesh Ranjan Behera
          accountType: SAVINGS
          description: "The Id of the creditor, Example - id:11"
        reference:
        - internal tran
    Debtor:
      title: Debtor
      required:
      - identifier
      - accountType
      type: object
      properties:
        identifier:
          type: string
        accountType:
          type: string
      examples:
      - identifier: id:{{savingsAccountId}}
        accountType: SAVINGS
    Creditor:
      title: Creditor
      required:
      - identifier
      - name
      - accountType
      type: object
      properties:
        identifier:
          type: string
        name:
          type: string
        accountType:
          type: string
      examples:
      - identifier: id:11
        name: Rakesh Ranjan Behera
        accountType: SAVINGS
    CreateACHTransferRequest:
      title: CreateACHTransferRequest
      required:
      - type
      - dateFormat
      - paymentType
      - amount
      - reference
      - debtor
      - creditor
      type: object
      properties:
        type:
          type: string
        dateFormat:
          type: string
        paymentType:
          type: string
        amount:
          type: integer
          contentEncoding: int32
        reference:
          type: array
          items:
            type: string
          description: ''
        debtor:
          $ref: '#/components/schemas/Debtor1'
        creditor:
          $ref: '#/components/schemas/Creditor1'
      examples:
      - type: CREDIT
        dateFormat: YYYY-MM-DD
        paymentType: ACH
        amount: 15
        reference:
        - the quick
        debtor:
          identifier: '{{accountNumber}}'
        creditor:
          identifier: ACH://051000017/0175380001
          name: David Wise
          address:
          - 17 Robert Lane
          - line2
          - lineN
          country: US
          agent:
            name: BANK OF AMERICA
            identifier: '051000017'
            address:
            - 17 Robert Lane
            - line2
            - lineN
    Debtor1:
      title: Debtor1
      required:
      - identifier
      type: object
      properties:
        identifier:
          type: string
      examples:
      - identifier: '{{accountNumber}}'
    Creditor1:
      title: Creditor1
      required:
      - identifier
      - name
      - address
      - country
      - agent
      type: object
      properties:
        identifier:
          type: string
        name:
          type: string
        address:
          type: array
          items:
            type: string
          description: ''
        country:
          type: string
        agent:
          $ref: '#/components/schemas/Agent'
      examples:
      - identifier: ACH://051000017/0175380001
        name: David Wise
        address:
        - 17 Robert Lane
        - line2
        - lineN
        country: US
        agent:
          name: BANK OF AMERICA
          identifier: '051000017'
          address:
          - 17 Robert Lane
          - line2
          - lineN
    Agent:
      title: Agent
      required:
      - name
      - identifier
      - address
      type: object
      properties:
        name:
          type: string
        identifier:
          type: string
        address:
          type: array
          items:
            type: string
          description: ''
      examples:
      - name: BANK OF AMERICA
        identifier: '051000017'
        address:
        - 17 Robert Lane
        - line2
        - lineN
    CreateDomesticWireTransferRequest:
      title: CreateDomesticWireTransferRequest
      required:
      - type
      - dateFormat
      - paymentType
      - amount
      - reference
      - debtor
      - creditor
      - paymentRailMetaData
      type: object
      properties:
        type:
          type: string
        dateFormat:
          type: string
        paymentType:
          type: string
        amount:
          type: number
        reference:
          type: array
          items:
            type: string
          description: ''
        debtor:
          $ref: '#/components/schemas/Debtor2'
        creditor:
          $ref: '#/components/schemas/Creditor2'
        paymentRailMetaData:
          $ref: '#/components/schemas/PaymentRailMetaData'
      examples:
      - type: CREDIT
        dateFormat: dd MMMM yyyy
        paymentType: WIRE
        amount: 1.9
        reference:
        - reference text
        debtor:
          identifier: '{{accountNumber}}'
          name: Demo Client
        creditor:
          name: Zabeeullah Shaik
          agent:
            identifier: '021000018'
            name: Bank Of Afghan
            address:
            - 4250 Executive Square
            - California
            - United States
            country: US
          address:
          - Pension Lane Mulapeta
          - CC AVenue
          - Nellore AK 52400 US
          identifier: WIRE://021000018/11223344556677
          country: US
          stateOrProvince: Alaska
          city: Nellore
          postalCode: '52400'
          forFurtherCredit: Benefici Info
        paymentRailMetaData:
          businessFunctionCode:
            businessFunctionCode: CTR
            transactionTypeCode: ''
          receiverDepositoryInstitution:
            receiverABANumber: '021000018'
            receiverShortName: Mike Tyson
          originator:
            personal:
              identificationCode: D
          beneficiary:
            personal:
              identificationCode: D
          beneficiaryFI:
            financialInstitution:
              identificationCode: F
          beneficiaryIntermediaryFI:
            financialInstitution:
              identificationCode: F
              identifier: '021000018'
              name: Bank Of Baroda
              address:
                addressLineOne: 4250 Executive Square
                addressLineTwo: California
                addressLineThree: United States
          fiAdditionalFiToFi:
            additionalFiToFi:
              lineOne: Fi TO FI info
          typeSubType:
            typeCode: '10'
            subTypeCode: '00'
          beneficiaryReference:
            beneficiaryReference: '234234234234'
          fiPaymentMethodToBeneficiary: {}
    Debtor2:
      title: Debtor2
      required:
      - identifier
      - name
      type: object
      properties:
        identifier:
          type: string
        name:
          type: string
      examples:
      - identifier: '{{accountNumber}}'
        name: Demo Client
    Creditor2:
      title: Creditor2
      required:
      - name
      - agent
      - address
      - identifier
      - country
      - stateOrProvince
      - city
      - postalCode
      - forFurtherCredit
      type: object
      properties:
        name:
          type: string
        agent:
          $ref: '#/components/schemas/Agent1'
        address:
          type: array
          items:
            type: string
          description: ''
        identifier:
          type: string
        country:
          type: string
        stateOrProvince:
          type: string
        city:
          type: string
        postalCode:
          type: string
        forFurtherCredit:
          type: string
      examples:
      - name: Zabeeullah Shaik
        agent:
          identifier: '021000018'
          name: Bank Of Afghan
          address:
          - 4250 Executive Square
          - California
          - United States
          country: US
        address:
        - Pension Lane Mulapeta
        - CC AVenue
        - Nellore AK 52400 US
        identifier: WIRE://021000018/11223344556677
        country: US
        stateOrProvince: Alaska
        city: Nellore
        postalCode: '52400'
        forFurtherCredit: Benefici Info
    Agent1:
      title: Agent1
      required:
      - identifier
      - name
      - address
      - country
      type: object
      properties:
        identifier:
          type: string
        name:
          type: string
        address:
          type: array
          items:
            type: string
          description: ''
        country:
          type: string
      examples:
      - identifier: '021000018'
        name: Bank Of Afghan
        address:
        - 4250 Executive Square
        - California
        - United States
        country: US
    PaymentRailMetaData:
      title: PaymentRailMetaData
      required:
      - businessFunctionCode
      - receiverDepositoryInstitution
      - originator
      - beneficiary
      - beneficiaryFI
      - beneficiaryIntermediaryFI
      - fiAdditionalFiToFi
      - typeSubType
      - beneficiaryReference
      - fiPaymentMethodToBeneficiary
      type: object
      properties:
        businessFunctionCode:
          $ref: '#/components/schemas/BusinessFunctionCode'
        receiverDepositoryInstitution:
          $ref: '#/components/schemas/ReceiverDepositoryInstitution'
        originator:
          $ref: '#/components/schemas/Originator'
        beneficiary:
          $ref: '#/components/schemas/Beneficiary'
        beneficiaryFI:
          $ref: '#/components/schemas/BeneficiaryFI'
        beneficiaryIntermediaryFI:
          $ref: '#/components/schemas/BeneficiaryIntermediaryFI'
        fiAdditionalFiToFi:
          $ref: '#/components/schemas/FiAdditionalFiToFi'
        typeSubType:
          $ref: '#/components/schemas/TypeSubType'
        beneficiaryReference:
          $ref: '#/components/schemas/BeneficiaryReference'
        fiPaymentMethodToBeneficiary:
          type: object
      examples:
      - businessFunctionCode:
          businessFunctionCode: CTR
          transactionTypeCode: ''
        receiverDepositoryInstitution:
          receiverABANumber: '021000018'
          receiverShortName: Mike Tyson
        originator:
          personal:
            identificationCode: D
        beneficiary:
          personal:
            identificationCode: D
        beneficiaryFI:
          financialInstitution:
            identificationCode: F
        beneficiaryIntermediaryFI:
          financialInstitution:
            identificationCode: F
            identifier: '021000018'
            name: Bank Of Baroda
            address:
              addressLineOne: 4250 Executive Square
              addressLineTwo: California
              addressLineThree: United States
        fiAdditionalFiToFi:
          additionalFiToFi:
            lineOne: Fi TO FI info
        typeSubType:
          typeCode: '10'
          subTypeCode: '00'
        beneficiaryReference:
          beneficiaryReference: '234234234234'
        fiPaymentMethodToBeneficiary: {}
    BusinessFunctionCode:
      title: BusinessFunctionCode
      required:
      - businessFunctionCode
      - transactionTypeCode
      type: object
      properties:
        businessFunctionCode:
          type: string
        transactionTypeCode:
          type: string
      examples:
      - businessFunctionCode: CTR
        transactionTypeCode: ''
    ReceiverDepositoryInstitution:
      title: ReceiverDepositoryInstitution
      required:
      - receiverABANumber
      - receiverShortName
      type: object
      properties:
        receiverABANumber:
          type: string
        receiverShortName:
          type: string
      examples:
      - receiverABANumber: '021000018'
        receiverShortName: Mike Tyson
    Originator:
      title: Originator
      required:
      - personal
      type: object
      properties:
        personal:
          $ref: '#/components/schemas/Personal'
      examples:
      - personal:
          identificationCode: D
    Personal:
      title: Personal
      required:
      - identificationCode
      type: object
      properties:
        identificationCode:
          type: string
      examples:
      - identificationCode: D
    Beneficiary:
      title: Beneficiary
      required:
      - personal
      type: object
      properties:
        personal:
          $ref: '#/components/schemas/Personal'
      examples:
      - personal:
          identificationCode: D
    BeneficiaryFI:
      title: BeneficiaryFI
      required:
      - financialInstitution
      type: object
      properties:
        financialInstitution:
          $ref: '#/components/schemas/FinancialInstitution'
      examples:
      - financialInstitution:
          identificationCode: F
    FinancialInstitution:
      title: FinancialInstitution
      required:
      - identificationCode
      type: object
      properties:
        identificationCode:
          type: string
      examples:
      - identificationCode: F
    BeneficiaryIntermediaryFI:
      title: BeneficiaryIntermediaryFI
      required:
      - financialInstitution
      type: object
      properties:
        financialInstitution:
          $ref: '#/components/schemas/FinancialInstitution1'
      examples:
      - financialInstitution:
          identificationCode: F
          identifier: '021000018'
          name: Bank Of Baroda
          address:
            addressLineOne: 4250 Executive Square
            addressLineTwo: California
            addressLineThree: United States
    FinancialInstitution1:
      title: FinancialInstitution1
      required:
      - identificationCode
      - identifier
      - name
      - address
      type: object
      properties:
        identificationCode:
          type: string
        identifier:
          type: string
        name:
          type: string
        address:
          $ref: '#/components/schemas/Address'
      examples:
      - identificationCode: F
        identifier: '021000018'
        name: Bank Of Baroda
        address:
          addressLineOne: 4250 Executive Square
          addressLineTwo: California
          addressLineThree: United States
    Address:
      title: Address
      required:
      - addressLineOne
      - addressLineTwo
      - addressLineThree
      type: object
      properties:
        addressLineOne:
          type: string
        addressLineTwo:
          type: string
        addressLineThree:
          type: string
      examples:
      - addressLineOne: 4250 Executive Square
        addressLineTwo: California
        addressLineThree: United States
    FiAdditionalFiToFi:
      title: FiAdditionalFiToFi
      required:
      - additionalFiToFi
      type: object
      properties:
        additionalFiToFi:
          $ref: '#/components/schemas/AdditionalFiToFi'
      examples:
      - additionalFiToFi:
          lineOne: Fi TO FI info
    AdditionalFiToFi:
      title: AdditionalFiToFi
      required:
      - lineOne
      type: object
      properties:
        lineOne:
          type: string
      examples:
      - lineOne: Fi TO FI info
    TypeSubType:
      title: TypeSubType
      required:
      - typeCode
      - subTypeCode
      type: object
      properties:
        typeCode:
          type: string
        subTypeCode:
          type: string
      examples:
      - typeCode: '10'
        subTypeCode: '00'
    BeneficiaryReference:
      title: BeneficiaryReference
      required:
      - beneficiaryReference
      type: object
      properties:
        beneficiaryReference:
          type: string
      examples:
      - beneficiaryReference: '234234234234'
    CreateInternationalWireTransferRequest:
      title: CreateInternationalWireTransferRequest
      required:
      - type
      - dateFormat
      - paymentType
      - amount
      - reference
      - debtor
      - creditor
      - paymentRailMetaData
      type: object
      properties:
        type:
          type: string
        dateFormat:
          type: string
        paymentType:
          type: string
        amount:
          type: integer
          contentEncoding: int32
        reference:
          type: array
          items:
            type: string
          description: ''
        debtor:
          $ref: '#/components/schemas/Debtor2'
        creditor:
          $ref: '#/components/schemas/Creditor3'
        paymentRailMetaData:
          $ref: '#/components/schemas/PaymentRailMetaData1'
      examples:
      - type: CREDIT
        dateFormat: dd MMMM yyyy
        paymentType: SWIFT
        amount: 150
        reference: []
        debtor:
          identifier: '{{accountNumber}}'
          name: Kole Castro
        creditor:
          name: TD Corporation Sarl
          agent:
            identifier: CITILULX
            name: CITIBANK EUROPE PLC
            address:
            - LUXEMBOURG BRANCH
            - 31 ZA BOURMICHT,
            - LU
            country: LU
          address:
          - 37 Rue d'Anvers
          - 1130 Luxembourg
          - LU
          identifier: SWIFT://CITILULX/LU210340007000190877
          country: LU
          city: ''
          postalCode: ''
        paymentRailMetaData:
          businessFunctionCode:
            businessFunctionCode: CTR
            transactionTypeCode: ''
          receiverDepositoryInstitution:
            receiverABANumber: '021000018'
            receiverShortName: BK OF NYC
          originator:
            personal:
              identificationCode: D
          beneficiary:
            personal:
              identificationCode: D
          beneficiaryFI:
            financialInstitution:
              identificationCode: B
          beneficiaryIntermediaryFI:
            financialInstitution:
              identificationCode: F
              identifier: '8901233412'
              name: Bankers Bank of the West
              address:
                addressLineOne: 099 18th St, Ste 2700
                addressLineTwo: Denver,CO 80202,US
                addressLineThree: US
          typeSubType:
            typeCode: '10'
            subTypeCode: '00'
          beneficiaryReference:
            beneficiaryReference: 'Client #558023'
          fiPaymentMethodToBeneficiary: {}
    Creditor3:
      title: Creditor3
      required:
      - name
      - agent
      - address
      - identifier
      - country
      - city
      - postalCode
      type: object
      properties:
        name:
          type: string
        agent:
          $ref: '#/components/schemas/Agent1'
        address:
          type: array
          items:
            type: string
          description: ''
        identifier:
          type: string
        country:
          type: string
        city:
          type: string
        postalCode:
          type: string
      examples:
      - name: TD Corporation Sarl
        agent:
          identifier: CITILULX
          name: CITIBANK EUROPE PLC
          address:
          - LUXEMBOURG BRANCH
          - 31 ZA BOURMICHT,
          - LU
          country: LU
        address:
        - 37 Rue d'Anvers
        - 1130 Luxembourg
        - LU
        identifier: SWIFT://CITILULX/LU210340007000190877
        country: LU
        city: ''
        postalCode: ''
    PaymentRailMetaData1:
      title: PaymentRailMetaData1
      required:
      - businessFunctionCode
      - receiverDepositoryInstitution
      - originator
      - beneficiary
      - beneficiaryFI
      - beneficiaryIntermediaryFI
      - typeSubType
      - beneficiaryReference
      - fiPaymentMethodToBeneficiary
      type: object
      properties:
        businessFunctionCode:
          $ref: '#/components/schemas/BusinessFunctionCode'
        receiverDepositoryInstitution:
          $ref: '#/components/schemas/ReceiverDepositoryInstitution'
        originator:
          $ref: '#/components/schemas/Originator'
        beneficiary:
          $ref: '#/components/schemas/Beneficiary'
        beneficiaryFI:
          $ref: '#/components/schemas/BeneficiaryFI'
        beneficiaryIntermediaryFI:
          $ref: '#/components/schemas/BeneficiaryIntermediaryFI'
        typeSubType:
          $ref: '#/components/schemas/TypeSubType'
        beneficiaryReference:
          $ref: '#/components/schemas/BeneficiaryReference'
        fiPaymentMethodToBeneficiary:
          type: object
      examples:
      - businessFunctionCode:
          businessFunctionCode: CTR
          transactionTypeCode: ''
        receiverDepositoryInstitution:
          receiverABANumber: '021000018'
          receiverShortName: BK OF NYC
        originator:
          personal:
            identificationCode: D
        beneficiary:
          personal:
            identificationCode: D
        beneficiaryFI:
          financialInstitution:
            identificationCode: B
        beneficiaryIntermediaryFI:
          financialInstitution:
            identificationCode: F
            identifier: '8901233412'
            name: Bankers Bank of the West
            address:
              addressLineOne: 099 18th St, Ste 2700
              addressLineTwo: Denver,CO 80202,US
              addressLineThree: US
        typeSubType:
          typeCode: '10'
          subTypeCode: '00'
        beneficiaryReference:
          beneficiaryReference: 'Client #558023'
        fiPaymentMethodToBeneficiary: {}
    EnableAddressRequest:
      title: EnableAddressRequest
      required:
      - addressId
      - isActive
      type: object
      properties:
        addressId:
          type: integer
          description: "The associated address Id."
          contentEncoding: int32
        isActive:
          type: boolean
          description: "To indicate if the client's address is active  or not."
      examples:
      - addressId: 22
        isActive: true
    ApproveAccountRequest:
      title: ApproveAccountRequest
      required:
      - locale
      - dateFormat
      - approvedOnDate
      type: object
      properties:
        locale:
          type: string
          description: "The client's locale."
        dateFormat:
          type: string
          description: "The date format for the approval date."
        approvedOnDate:
          type: string
          description: "The approval date."
      examples:
      - locale: en
        dateFormat: dd MMMM yyyy
        approvedOnDate: 22 June 2023
    ActivateAccountRequest:
      title: ActivateAccountRequest
      required:
      - locale
      - dateFormat
      - activatedOnDate
      type: object
      properties:
        locale:
          type: string
        dateFormat:
          type: string
        activatedOnDate:
          type: string
      examples:
      - locale: en
        dateFormat: dd MMMM yyyy
        activatedOnDate: 22 June 2023
    ActivateacardRequest:
      title: ActivateacardRequest
      required:
      - productId
      type: object
      properties:
        productId:
          type: integer
          contentEncoding: int32
      examples:
      - productId: 1
    CreateActivateCardRESTRequest:
      title: CreateActivateCardRESTRequest
      required:
      - savingsAccountId
      - productId
      type: object
      properties:
        savingsAccountId:
          type: integer
          description: "This is the associated savings account id."
          contentEncoding: int32
        productId:
          type: integer
          description: "This is the associated product id."
          contentEncoding: int32
      examples:
      - savingsAccountId: 18
        productId: 1
  securitySchemes:
    httpBearer:
      type: http
      scheme: bearer
security:
- httpBearer: []
tags:
- name: Authorization
  description: "The first step to using the API is to obtain an access token. The following table summarizes the parameters that must be passed, and examples are included as well.\n\n  \n\n| **URL params** | **Description** |\n| --- | --- |\n| client_id | The **client_id** is the identifier for a registered app of your banking instance. For this preview release, the default value is: **api**. In our official release, you will be able to set this uniquely for each app.  <br> |\n| client_secret | The **client_secret** is a secret known only to the application and the authorization server. For this preview release, the default value is **secret**. In our official release, you will be able to set this uniquely for each app.  <br> |\n| tenantIdentifier | The identifier of your banking instance |\n| tenantIdentifier | Username defined in your banking instance. |\n| tenantIdentifier | Username defined in your banking instance. |"
- name: Onboarding
  description: >-
    This folder has several steps such as:


    1. Creating and activating a client

    2. Associating address to a client

    3. KYC verification
- name: Verification and Activation
  description: All KYC related functionalities willl be present in this folder.
- name: Accounts
  description: >-
    Accounts are instances of a particular deposit product (current account, savings account) created for a retail or a corporare Client.


    An application process around the creation of accounts is also supported.


    | Starting State | Action | Resultant State |

    | --- | --- | --- |

    | \- | Submit | Submitted and pending approval |

    | Submitted and pending approval | Reject | Closed - Rejected |

    | Submitted and pending approval | Withdrawn by Applicant | Closed - Withdrawn by Applicant |

    | Submitted and pending approval | Approve | Approved |

    | Approved | Undo Approval | Submitted and pending approval |

    | Approved | Activate | Active |


    Supported Field which creating an account include


    | Field | Description |

    | --- | --- |

    | `clientId` | The client you are creating the deposits account for. |

    | `productId` | The id of the product used for this account. The account inherits the selected currency of the product and other details if not overridden in the account creation request. |

    | `accountNo` | **Optional**: The account no. associated with this account. Is auto generated if not provided at creation time. |

    | `externalId` | **Optional**: A place to put an external reference for this deposits account useful in migrations e.g. The ID another system uses. If provided, it must be unique. |

    | `submittedOnDate` | _submittedOnDate_ must be provided when initially creating deposits account application. _locale_ and _dateFormat_ parameters must be provided with this. |

    | `nominalAnnualInterestRate` | **Optional**: The interest rate set for deposits account e.g. 5% Per year - It is always expressed as the Nominal APR. |

    | `interestCompoundingPeriodType` | **Optional**: The period at which interest rate is compounded.  <br>1=Daily,  <br>4=Monthly (at end of month) |

    | `interestPostingPeriodType` | **Optional**: The period at which interest rate is posted or credited to deposits account. The actual crediting or posting transaction is date as occurring on the day after the end of the period. 4=Monthly (at end of month),  <br>5=Quarterly (at end of quarter, 31st Mar, 30th Jun, 30th Sep, 31st Dec), 7=Annually (at end of calendar year 31st Dec) |

    | `interestCalculationType` | **Optional**: The interest calculation method used:  <br>1=Daily Balance or 2=Average Daily Balance |

    | `interestCalculationDaysInYearType` | **Optional**: The setting for number of days in year to use:  <br>360=360 Days,  <br>365=365 Days |

    | `minRequiredOpeningBalance` | **Optional**: If provided, sets the minimum deposit amount required to open a deposits account e.g. 2,000 |

    | `lockinPeriodFrequency` | **Optional**: If provided, used along with _lockinPeriodFrequencyType_ to indicate the length of time that the deposits account is 'locked in' and withdrawals are not allowed. e.g. 6 Months |

    | `lockinPeriodFrequencyType` | **Optional**: If provided, used along with _lockinPeriodFrequency_ to indicate the length of time that the deposits account is 'locked in' and withdrawals are not allowed. 0=Days, 1=Weeks, 2=Months, 3=Years e.g. 6 Months |

    | `withdrawalFeeForTransfers` | **Optional**: Used along with _withdrawalFeeAmount_ to indicate whether the withdrawal fee should be applied on the account for account transfers . |

    | `allowOverdraft` | **Optional**: If provided, depending on the value mark the deposits account as overdraft account |

    | `overdraftLimit` | **Optional**: If provided, sets the maximum allowed overdraft amount for a deposits account e.g. 5,000 else set the limit as zero |

    | `withHoldTax` | **Optional**: If tax group provided at product level, will allow to Enable or disable withhold tax on interest posting for deposits account |

    | `datatables` | **Optional**: Additional Mandatory Field if Entity-Datatable Check is enabled for the entity of type Savings. |
- name: Card Issuing
  description: "Mbanq Cloud supports issuing the following types of Debit Cards\n\n- **Virtual Card**: An instant issue card with no physical representation.\n- **Digital FIrst Card**: An instant issue card with on demand fullfilment (shipping of a physical version)\n    \n\nWith Digital First cards, the instance of an issued card is immediately activated for push provisioning to digital wallets. This allows the customer to immediately start making transactions using the digital wallets.\n\nThe customer then activates the card for online and point of sale purchases once the physical card is delivered to him."
- name: Transfers
  description: >-
    **Field Descriptions**


    - `clientId`
        - The client that created the transfer
    - `correlationId`
        - The correlation id is used to associate multiple related transactions. If not provided, one will be automatically assigned.
    - `transactionId`
        - The unique id for a transaction. Note that it is acceptable if the transaction id is the same as the correlation id if it’s the first transaction. If not provided, one will be automatically assigned.
    - `type`
        - Supported values are CREDIT for a credit transfer and DEBIT for a debit transfer.
    - `paymentType`
        - Supported values are ACH, WIRE, SWIFT, SEPA, CARD
    - `externalId`
        - A unique id provided by the caller of the API, to reference the transfer. Uniqueness applies per client.
    - `dateFormat`
        - The date format specifies how all dates in the request are formatted.
    - `executionDate`
        - The date the transfer is scheduled to execute on. Note that scheduled execution is not currently supported.
    - `valueDate`
        - Value date of the transaction
    - `bookingDate`
        - Booking date of the transaction
    - `reference`
        - The reference text for the transfer
    - `amount`
        - The amount received in the target account, in the currency of the target account
    - `inOut`
        - **IN** & **INTERNAL** - Represents a transfer was originated by internal
        - **OUT** - Represents a transfer was originated by External Party
    - `status`
        - The status of the transfer which can be one of:
            - **CANCELLED** - Represents a transfer that was canceled before it was submitted to the payment scheme
            - **EXECUTION_SCHEDULED** - Represents transfers that have been bulked, i.e ready for sending to,
            - **EXECUTION_PROCESSING** - Represents a transfer that has been sent to a payment scheme which is not real-time (i.e we get an eventual confirmation upon completion of the payment like 3 day ACH),
            - **EXECUTION_SUCCESS** - Represents a transfer that has been successfully completed
            - **EXECUTION_FAILURE** - Represents a transfer that was rejected by the Payment scheme or by us
            - **DRAFT** - Represents a transfer is status DRAFT
            - **AML_SCREENING** - Represents a transfer that has been sent to AML
            - **AML_REJECTED** - Represents a transfer that has been rejected by AML
            - **RETURN_PROCESSING** - Represents a transfer was click return transfer status
            - **RETURNED** - Represents a transfer has been finish and return from ACH
            - **DELETED** - Represents a transfer that has been deleted
    - `debtor`
        - The debtor information for the transfer. It is a complex json object that contains properties for the **identifier** of the account, **name**, **address**, **postalCode**, **city**, **accountType** and **country** of the account holder, and information on the financial institution.
    - `creditor`
        - The creditor information for the transfer. It is a complex json object that contains properties for the **identifier** of the account, **name**, **address**, **postalCode**, **city**, **accountType**, **forFurtherCredit** and **country** of the account holder, and information on the financial institution
        - The identifier is in a URI form and can reference different internal or external payment schemes, such as:

    ```

    "SWIFT://XYZBUS33ODE/0175380001",

    "IBAN:GB33BUKB20201555555555",

    "ACH://051000017/0175380001",

    "EXTERNALCARD:1",

    "WIRE://321070007/017538001"


    ```


    - fees Fees associated with the transfer. Currently this field is not used
- name: Misc
